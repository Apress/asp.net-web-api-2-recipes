<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetRoutingConventionsDataStore(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetSelectExpandClause(System.Net.Http.HttpRequestMessage)">
      <summary> Gets the parsed <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> of the given request. </summary>
      <returns>The parsed <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> of the given request.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetSelectExpandClause(System.Net.Http.HttpRequestMessage,Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause)">
      <summary> Sets the parsed <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> for the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" /> to use while writing response for this request. </summary>
      <param name="request">The request.</param>
      <param name="selectExpandClause">The parsed <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> of the given request.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.HttpConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>Enables query support for actions with a <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type.</summary>
      <param name="configuration">The server configuration.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Enables query support for actions with a <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type.</summary>
      <param name="configuration">The server configuration.</param>
      <param name="queryFilter">The action filter that executes the query.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.HttpError" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>Converts the <paramref name="httpError" /> to an <see cref="T:Microsoft.Data.OData.ODataError" /> .</summary>
      <returns>The converted <see cref="T:Microsoft.Data.OData.ODataError" /></returns>
      <param name="httpError">The <see cref="T:System.Web.Http.HttpError" /> instance to convert.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.HttpRouteCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Maps the specified OData route.</summary>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Maps the specified OData route. When the batchHandler is provided, it will create a 'batch' endpoint to handle the batch requests.</summary>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="batchHandler">The <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Maps the specified OData route.</summary>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="pathHandler">The <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> to use for parsing the OData path.</param>
      <param name="routingConventions">The OData routing conventions to use for controller and action selection.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention},System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Maps the specified OData route. When the batchHandler is provided, it will create a 'batch' endpoint to handle the batch requests.</summary>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routePrefix">The prefix to add to the OData route's path template.</param>
      <param name="model">The EDM model to use for parsing OData paths.</param>
      <param name="pathHandler">The <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> to use for parsing the OData path.</param>
      <param name="routingConventions">The OData routing conventions to use for controller and action selection.</param>
      <param name="batchHandler">The <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />.</param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Adds the elements of the specified collection to the end of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> .</summary>
      <param name="collection">The collection to which to add the items.</param>
      <param name="items">The items that should be added to the end of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />. The items collection itself cannot be null , but it can contain elements that are null.</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inserts the elements of a collection into the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> at the specified index.</summary>
      <param name="collection">The collection to which to insert the items.</param>
      <param name="index">The zero-based index at which the new elements should be inserted.</param>
      <param name="items">The items that should be inserted into the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> . The items collection itself cannot be null , but it can contain elements that are null.</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>Provides extension methods for the <see cref="T:System.Web.Http.Routing.UrlHelper" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Generates an OData link.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
      <param name="urlHelper">The URL helper.</param>
      <param name="segments">The OData path segments.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Generates an OData link using the request's OData route name and path handler.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
      <param name="urlHelper">The URL helper.</param>
      <param name="routeName">The name of the OData route.</param>
      <param name="pathHandler">The path handler to use for generating the link.</param>
      <param name="segments">The OData path segments.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Generates an OData link.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
      <param name="urlHelper">The URL helper.</param>
      <param name="segments">The OData path segments.</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary> This class defines an attribute that can be applied to an action to enable querying using the OData query syntax. To avoid processing unexpected or malicious queries, use the validation settings on <see cref="T:System.Web.Http.QueryableAttribute" /> to validate incoming queries. For more information, visit http://go.microsoft.com/fwlink/?LinkId=279712. </summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.QueryableAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedArithmeticOperators">
      <summary>Gets or sets a value that represents a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.</summary>
      <returns>The list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedFunctions">
      <summary>Gets or sets a value that represents a list of allowed functions used in the $filter query.</summary>
      <returns>A list of allowed functions used in the $filter query.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedLogicalOperators">
      <summary>Gets or sets a value that represents a list of allowed logical Operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</summary>
      <returns>The list of allowed logical Operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedOrderByProperties">
      <summary>Gets or sets a string with comma-separated list of property names. The queryable result can only be ordered by those properties defined in this list.</summary>
      <returns>A comma-separated list of property names that can be used to order.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedQueryOptions">
      <summary>Gets or sets the query parameters that are allowed in queries. </summary>
      <returns>The query parameters that are allowed in queries. The default is all query options, including $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format and $skiptoken.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Applies the query to the given entity based on incoming query from uri and query settings.</summary>
      <returns>The new entity.</returns>
      <param name="queryable">The original queryable instance from the response message.</param>
      <param name="queryOptions">The <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> instance constructed based on the incoming request.</param>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Object,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary> Applies the query to the given entity based on incoming query from uri and query settings. </summary>
      <returns>The new entity after the $select and $expand query has been applied to.</returns>
      <param name="entity">The original entity from the response message.</param>
      <param name="queryOptions">The <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> instance constructed based on the incoming request.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnableConstantParameterization">
      <summary>Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants would result in better performance with Entity framework.</summary>
      <returns>A value indicating whether constants should be parameterized. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering">
      <summary>Gets or sets a value indicating whether query composition should alter the original query when necessary to ensure a stable sort order.</summary>
      <returns>A value indicating whether query composition should alter the original query when necessary to ensure a stable sort order. The default value is true.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Gets the EDM model for the given type and request.</summary>
      <returns>The EDM model for the given type and request.</returns>
      <param name="elementClrType">The CLR type to retrieve a model for.</param>
      <param name="request">The request message to retrieve a model for.</param>
      <param name="actionDescriptor">The action descriptor for the action being queried on.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation">
      <summary>Gets or sets a value indicating how null propagation should be handled during query composition.</summary>
      <returns>A value indicating how null propagation should be handled during query composition. The default is <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth">
      <summary>Gets or sets the maximum depth of the Any or All elements nested inside the query.</summary>
      <returns>The maximum depth of the Any or All elements nested inside the query. The default value is 1.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxExpansionDepth">
      <summary>Gets or sets the max expansion depth for the $expand query option. </summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxNodeCount">
      <summary>Gets or sets the maximum number of nodes inside the $filter syntax tree.</summary>
      <returns>The maximum number of nodes inside the $filter syntax tree. The default value is 100.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxOrderByNodeCount">
      <summary>Gets or sets the maximum number of expressions that can be present in the $orderby.</summary>
      <returns>The maximum number of expressions that can be present in the $orderby.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxSkip">
      <summary>Gets or sets the max value of $skip that a client can request.</summary>
      <returns>The max value of $skip that a client can request.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxTop">
      <summary>Gets or sets the max value of $top that a client can request.</summary>
      <returns>The max value of $top that a client can request.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Performs the query composition after action is executed.</summary>
      <param name="actionExecutedContext">The context related to this action, including the response message, request message and HttpConfiguration etc.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.PageSize">
      <summary>Gets or sets the maximum number of query results to send back to clients.</summary>
      <returns>The maximum number of query results to send back to clients.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Validates the OData query in the incoming request.</summary>
      <param name="request">The incoming request.</param>
      <param name="queryOptions">The <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> instance constructed based on the incoming request.</param>
    </member>
    <member name="T:System.Web.Http.SingleResult">
      <summary> Represents an <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. </summary>
    </member>
    <member name="M:System.Web.Http.SingleResult.#ctor(System.Linq.IQueryable)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.SingleResult" /> class. </summary>
      <param name="queryable">The <see cref="T:System.Linq.IQueryable" /> containing zero or one entities.</param>
    </member>
    <member name="M:System.Web.Http.SingleResult.Create``1(System.Linq.IQueryable{``0})">
      <summary> Creates a &lt;see cref="T:System.Web.Http.SingleResult`1" /&gt; from an &lt;see cref="T:System.Linq.IQueryable`1" /&gt;. </summary>
      <returns>The created &lt;see cref="T:System.Web.Http.SingleResult`1" /&gt;.</returns>
      <param name="queryable">The &lt;see cref="T:System.Linq.IQueryable`1" /&gt; containing zero or one entities.</param>
      <typeparam name="T">The type of the data in the data source.</typeparam>
    </member>
    <member name="P:System.Web.Http.SingleResult.Queryable">
      <summary> The <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. </summary>
    </member>
    <member name="T:System.Web.Http.SingleResult`1">
      <summary> Represents an <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. </summary>
      <typeparam name="T">The type of the data in the data source.</typeparam>
    </member>
    <member name="M:System.Web.Http.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.SingleResult" /> class. </summary>
      <param name="queryable">The &lt;see cref="T:System.Linq.IQueryable`1" /&gt; containing zero or one entities.</param>
    </member>
    <member name="P:System.Web.Http.SingleResult`1.Queryable">
      <summary> The &lt;see cref="T:System.Linq.IQueryable`1" /&gt; containing zero or one entities. </summary>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>Provides a convenient starting point for a controller that exposes an OData entity set. This is the asynchronous version of <see cref="T:System.Web.Http.OData.EntitySetController`2" /> .</summary>
      <typeparam name="TEntity">The type associated with the exposed entity set's entity type.</typeparam>
      <typeparam name="TKey">The type associated with the entity key of the exposed entity set's entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>This method should be overridden to create a new entity in the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the created entity when it completes.</returns>
      <param name="entity">The entity to add to the entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>This method should be overridden to handle POST and PUT requests that attempt to create a link between two entities.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when the link has been successfully created.</returns>
      <param name="key">The key of the entity with the navigation property.</param>
      <param name="navigationProperty">The name of the navigation property.</param>
      <param name="link">The URI of the entity to link.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>This method should be overridden to handles DELETE requests for deleting existing entities from the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when the entity has been successfully deleted.</returns>
      <param name="key">The entity key of the entity to delete.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">The key of the entity with the navigation property.</param>
      <param name="relatedKey">The key of the related entity.</param>
      <param name="navigationProperty">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">The key of the entity with the navigation property.</param>
      <param name="navigationProperty">The name of the navigation property.</param>
      <param name="link">The URI of the entity to remove from the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>This method should be overridden to handle GET requests that attempt to retrieve entities from the entity set.</summary>
      <returns>The matching entities from the entity set.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>Handles GET requests that attempt to retrieve an individual entity by key from the entity set.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="key">The entity key of the entity to retrieve.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>This method should be overridden to retrieve an entity by key from the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the retrieved entity when it completes, or null if an entity with the specified entity key cannot be found in the entity set.</returns>
      <param name="key">The entity key of the entity to retrieve.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>This method should be overridden to get the entity key of the specified entity.</summary>
      <returns>The entity key value</returns>
      <param name="entity">The entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>This method should be overridden to handle all unmapped OData requests.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the response message to send back to the client when it completes.</returns>
      <param name="odataPath">The OData path of the request.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>Gets the OData path of the current request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Handles PATCH and MERGE requests to partially update a single entity in the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the response message to send back to the client when it completes.</returns>
      <param name="key">The entity key of the entity to update.</param>
      <param name="patch">The patch representing the partial update.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>This method should be overridden to apply a partial update to an existing entity in the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the updated entity when it completes.</returns>
      <param name="key">The entity key of the entity to update.</param>
      <param name="patch">The patch representing the partial update.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>Handles POST requests that create new entities in the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the response message to send back to the client when it completes.</returns>
      <param name="entity">The entity to insert into the entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>Handles PUT requests that attempt to replace a single entity in the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the response message to send back to the client when it completes.</returns>
      <param name="key">The entity key of the entity to replace.</param>
      <param name="update">The updated entity.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>Gets the OData query options of the current request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>This method should be overridden to update an existing entity in the entity set.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that contains the updated entity when it completes.</returns>
      <param name="key">The entity key of the entity to update.</param>
      <param name="update">The updated entity.</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.Data.Edm.IEdmType" /> to a CLR type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" /> class.</summary>
      <param name="clrType">The backing CLR type for the EDM type.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>The backing CLR type for the EDM type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta">
      <summary>A class the tracks changes (i.e. the Delta) for an entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.#ctor"></member>
    <member name="M:System.Web.Http.OData.Delta.Clear">
      <summary>Clears the Delta and resets the underlying Entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.GetChangedPropertyNames">
      <summary>Returns the Properties that have been modified through this Delta as an enumeration of Property Names</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.GetUnchangedPropertyNames">
      <summary>Returns the Properties that have not been modified through this Delta as an enumeration of Property Names</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Overrides the DynamicObject TryGetMember method, so that only the properties of Entity can be got.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>Returns true if the Property was found and false if not.</returns>
      <param name="name">The name of the Property</param>
      <param name="type">The type of the Property</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>True if the Property was found</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The value of the Property</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Overrides the DynamicObject TrySetMember method, so that only the properties of Entity can be set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the Property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>True if successful</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The new value of the Property</param>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>A class the tracks changes (i.e. the delta) for a particular <paramref name="TEntityType" />.</summary>
      <typeparam name="TEntityType">TEntityType is the base type of entity this delta tracks changes for.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">The derived entity type for which the changes would be tracked. <paramref name="entityType" /> should be assignable to instances of <paramref name="TEntityType" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">The derived entity type for which the changes would be tracked. <paramref name="entityType" /> should be assignable to instances of <paramref name="TEntityType" />.</param>
      <param name="updatableProperties">The set of properties that can be updated or reset.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>Clears the Delta and resets the underlying Entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Copies the changed property values from the underlying entity (accessible via <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> to the <paramref name="original" /> entity.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Copies the unchanged property values from the underlying entity (accessible via <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> ) to the <paramref name="original" /> entity.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>Gets the actual type of the entity for which the changes are tracked.</summary>
      <returns>The actual type of the entity for which the changes are tracked.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.ExpectedClrType">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>Returns the Properties that have been modified through this Delta as an enumeration of property names.</summary>
      <returns>The property names.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetDynamicMemberNames">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>Returns the <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> instance that holds all the changes (and original values) being tracked by this Delta.</summary>
      <returns>The <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> istance.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>Returns the properties that have not been modified through this Delta as an enumeration of property names.</summary>
      <returns>The properties that have not been modified through this Delta as an enumeration of property names.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>Overwrites the <paramref name="original" /> entity with the changes tracked by this Delta.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>Overwrites the <paramref name="original" /> entity with the values stored in this Delta.</summary>
      <param name="original">The entity to be updated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the property called <paramref name="name" /> from the underlying entity.</summary>
      <returns>true if the property was found; otherwise, false.</returns>
      <param name="name">The name of the property.</param>
      <param name="type">The type of the property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the property called <paramref name="name" /> from the underlying entity.</summary>
      <returns>true if the property was found.</returns>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>true if successful; otherwise, false.</returns>
      <param name="name">The name of the property.</param>
      <param name="value">The new value of the property.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmComplexObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmComplexObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type.</param>
      <param name="isNullable">true if the object is nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmComplexObjectCollection">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmObject" /> that is a collection of <see cref="T:System.Web.Http.OData.IEdmComplexObject" />s.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.Http.OData.IEdmComplexObject})">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
      <param name="list">The list that is wrapped by the new collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.GetEdmType"></member>
    <member name="T:System.Web.Http.OData.EdmEntityObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmEntityObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> of this object.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmEntityTypeReference" /> of this object.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmEntityObjectCollection">
      <summary>Represents the collection of EDM entity object type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmEntityObjectCollection" /> class.</summary>
      <param name="edmType">The reference type of EDM.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.Http.OData.IEdmEntityObject})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmEntityObjectCollection" /> class.</summary>
      <param name="edmType">The reference type of EDM.</param>
      <param name="list">The list.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.GetEdmType">
      <summary>Gets a reference to an EDM type.</summary>
      <returns>A reference to an EDM type.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EdmModelExtensions">
      <summary>Provides extension methods for the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> interface.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.GetActionLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> to be used while generating action links for the given action.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> for the given action if one is set; otherwise, a new <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> that generates action links following OData URL conventions.</returns>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the action.</param>
      <param name="action">The action for which the link builder is needed.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.GetEntitySetLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> to be used while generating self and navigation links for the given entity set.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> if set for the given the entity set; otherwise, a new <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> that generates URLs that follow OData URL conventions.</returns>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="entitySet">The entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.SetActionLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmFunctionImport,System.Web.Http.OData.Builder.ActionLinkBuilder)">
      <summary>Sets the <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> to be used for generating the OData action link for the given action.</summary>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="action">The action for which the action link is to be generated.</param>
      <param name="actionLinkBuilder">The <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> to set.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.SetEntitySetLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntitySet,System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation)">
      <summary>Sets the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> to be used while generating self and navigation links for the given entity set.</summary>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="entitySet">The entity set.</param>
      <param name="entitySetLinkBuilder">The <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> to set.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmStructuredObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmStructuredObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> of this object.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmStructuredTypeReference" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmStructuredTypeReference" /> of this object.</param>
    </member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.ActualEdmType">
      <summary>Gets or sets the actual <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> of the entity or complex type of this object.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.Clear"></member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.ExpectedEdmType">
      <summary>Gets or sets the expected <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> of the entity or complex type of this object.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetChangedPropertyNames"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetEdmType"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetUnchangedPropertyNames"></member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.IsNullable">
      <summary>Gets or sets whether the EDM object is nullable or not.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)"></member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>An instance of <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> gets passed to the self link ( <see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" /> ) and navigation link ( <see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" /> ) builders and can be used by the link builders to generate links.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> class.</summary>
      <param name="serializerContext">The serializer context.</param>
      <param name="entityType">The entity type.</param>
      <param name="entityInstance">The entity instance.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> to which this instance belongs.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> to which this instance belongs.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmObject">
      <summary>Gets or sets the entity object for this instance.</summary>
      <returns>The entity object for this instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>Gets or sets the value of this entity instance.</summary>
      <returns>The value of this entity instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> to which this instance belongs.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> to which this instance belongs.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> of this entity instance.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> of this entity instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <summary>Gets or sets the HTTP request that caused this instance to be generated.</summary>
      <returns>The HTTP request that caused this instance to be generated.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SerializerContext">
      <summary>Gets or sets the serializer context.</summary>
      <returns>The serializer context.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Gets or sets a value indicating whether ActionAvailabilityChecks should be performed or not.</summary>
      <returns>true if ActionAvailabilityChecks should be performed or not; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <summary>Gets or sets a <see cref="T:System.Web.Http.Routing.UrlHelper" /> that may be used to generate links while serializing this entity instance.</summary>
      <returns>A <see cref="T:System.Web.Http.Routing.UrlHelper" /> that may be used to generate links while serializing this entity instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>Represents an instance of <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> gets passed to the self link (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) and navigation link (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) builders and can be used by the link builders to generate links.</summary>
      <typeparam name="TEntityType">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance">
      <summary>Gets or sets the entity instance.</summary>
      <returns>The entity instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>Provides a convenient starting point for a controller that exposes an OData entity set. This is the synchronous version of <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
      <typeparam name="TEntity">The type associated with the exposed entity set's entity type.</typeparam>
      <typeparam name="TKey">The type associated with the entity key of the exposed entity set's entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EntitySetController`2" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>This method should be overridden to create a new entity in the entity set.</summary>
      <returns>The created entity.</returns>
      <param name="entity">The entity to add to the entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>This method should be overridden to handle POST and PUT requests that attempt to create a link between two entities.</summary>
      <param name="key">The key of the entity with the navigation property.</param>
      <param name="navigationProperty">The name of the navigation property.</param>
      <param name="link">The URI of the entity to link.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>This method should be overridden to handle DELETE requests for deleting existing entities from the entity set.</summary>
      <param name="key">The entity key of the entity to delete.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.</summary>
      <param name="key">The key of the entity with the navigation property.</param>
      <param name="relatedKey">The key of the related entity.</param>
      <param name="navigationProperty">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.</summary>
      <param name="key">The key of the entity with the navigation property.</param>
      <param name="navigationProperty">The name of the navigation property.</param>
      <param name="link">The URI of the entity to remove from the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>This method should be overridden to handle GET requests that attempt to retrieve entities from the entity set.</summary>
      <returns>The matching entities from the entity set.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>Handles GET requests that attempt to retrieve an individual entity by key from the entity set.</summary>
      <returns>The response message to send back to the client.</returns>
      <param name="key">The entity key of the entity to retrieve.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>This method should be overridden to retrieve an entity by key from the entity set.</summary>
      <returns>The retrieved entity, or null if an entity with the specified entity key cannot be found in the entity set.</returns>
      <param name="key">The entity key of the entity to retrieve.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>This method should be overridden to get the entity key of the specified entity.</summary>
      <returns>The entity key value.</returns>
      <param name="entity">The entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>This method should be overridden to handle all unmapped OData requests.</summary>
      <returns>The response message to send back to the client.</returns>
      <param name="odataPath">The OData path of the request.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>Gets the OData path of the current request.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Handles PATCH and MERGE requests to partially update a single entity in the entity set.</summary>
      <returns>The response message to send back to the client.</returns>
      <param name="key">The entity key of the entity to update.</param>
      <param name="patch">The patch representing the partial update.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>This method should be overridden to apply a partial update to an existing entity in the entity set.</summary>
      <returns>The updated entity.</returns>
      <param name="key">The entity key of the entity to update.</param>
      <param name="patch">The patch representing the partial update.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>Handles POST requests that create new entities in the entity set.</summary>
      <returns>The response message to send back to the client.</returns>
      <param name="entity">The entity to insert into the entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>Handles PUT requests that attempt to replace a single entity in the entity set.</summary>
      <returns>The response message to send back to the client.</returns>
      <param name="key">The entity key of the entity to replace.</param>
      <param name="update">The updated entity.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>Gets the OData query options of the current request.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>This method should be overridden to update an existing entity in the entity set.</summary>
      <returns>The updated entity.</returns>
      <param name="key">The entity key of the entity to update.</param>
      <param name="update">The updated entity.</param>
    </member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>Contains context information about the feed currently being serialized.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.FeedContext" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> this instance belongs to.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> this instance belongs to.</returns>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>Gets the value of this feed instance.</summary>
      <returns>The value of this feed instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request">
      <summary>Gets or sets the HTTP request that caused this instance to be generated.</summary>
      <returns>The HTTP request that caused this instance to be generated.</returns>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Url">
      <summary>Gets or sets the <see cref="T:System.Web.Http.Routing.UrlHelper" /> to be used for generating links while serializing this feed instance.</summary>
      <returns>The <see cref="T:System.Web.Http.Routing.UrlHelper" /> to be used for generating links while serializing this feed instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>An implementation of <see cref="T:System.Web.Http.ParameterBindingAttribute" /> that can bind URI parameters using OData conventions.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.FromODataUriAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets the binding for a parameter.</summary>
      <returns>The <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> that contains the binding.</returns>
      <param name="parameter">The parameter to bind.</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>Allows and tracks changes to an object.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>Clears the <see cref="T:System.Web.Http.OData.IDelta" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>Returns the properties that have been modified through this IDelta as an enumerable of property names.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Returns the properties that have not been modified through this IDelta as an enumerable of property names.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the property called <paramref name="name" /> from the underlying entity.</summary>
      <returns>Returns true if the property was found and false if not.</returns>
      <param name="name">The name of the property.</param>
      <param name="type">The type of the property.</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the property called <paramref name="name" /> from the underlying entity.</summary>
      <returns>Returns true if the property was found and false if not.</returns>
      <param name="name">The name of the property</param>
      <param name="value">The value of the property</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>Returns true if successful and false if not.</returns>
      <param name="name">The name of the property.</param>
      <param name="value">The new value of the property.</param>
    </member>
    <member name="T:System.Web.Http.OData.IEdmComplexObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.IEdmEntityObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.IEdmObject">
      <summary>Represents an EDM instance.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IEdmObject.GetEdmType">
      <summary>Returns the EDM type of the current instance.</summary>
      <returns>The EDM type of the current instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.IEdmStructuredObject">
      <summary>Represents the structured object component of the Edm.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Gets the value of the property with the given name.</summary>
      <returns>
        <see cref="true" /> if the instance contains the property with the given name; otherwise, <see cref="false" />.</returns>
      <param name="propertyName">The name of the property to get.</param>
      <param name="value">When this method returns, contains the value of the property with the given name, if the property is found; otherwise, <see cref="null" />. The parameter is passed uninitialized.</param>
    </member>
    <member name="T:System.Web.Http.OData.NullEdmComplexObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmComplexObject" /> that is null.</summary>
    </member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.NullEdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type of this object.</param>
    </member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.GetEdmType"></member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>ActionPayload holds the Parameter names and values provided by a client in a POST request to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataActionParameters" /> class.</summary>
    </member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>Defines a base class for OData controllers that support writing and reading data using the OData formats.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataController" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.Created``1(``0)">
      <summary>Creates an action result with the specified values that is a response to a POST operation with an entity to an entity set.</summary>
      <returns>A <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" /> with the specified values.</returns>
      <param name="entity">The created entity.</param>
      <typeparam name="TEntity">The created entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.Updated``1(``0)">
      <summary>Creates an action result with the specified values that is a response to a PUT, PATCH, or a MERGE operation on an OData entity.</summary>
      <returns>An <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" /> with the specified values.</returns>
      <param name="entity">The updated entity.</param>
      <typeparam name="TEntity">The updated entity type.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>An attribute to be placed on controllers that enables the OData formatters.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataFormattingAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.CreateODataFormatters">
      <summary>Creates a list of OData formatters.</summary>
      <returns>A list of OData formatters.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Callback invoked to set per-controller overrides for this controllerDescriptor.</summary>
      <param name="controllerSettings">The controller settings to initialize.</param>
      <param name="controllerDescriptor">The controller descriptor. Note that the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> can be associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> is inherited.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Represents an <see cref="T:System.Web.Http.ApiController" /> for generating OData servicedoc and metadata document ($metadata).</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataMetadataController" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Generates the OData $metadata document.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> representing $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Generates the OData service document.</summary>
      <returns>The service document for the service.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataNullValueAttribute">
      <summary>Represents an attributes of the OData null value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataNullValueAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataNullValueAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataNullValueAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Called after the action method is invoked.</summary>
      <param name="actionExecutedContext">The action executed context.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>This defines some context information used to perform query composition.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmType)">
      <summary>Constructs an instance of <see cref="T:System.Web.Http.OData.ODataQueryContext" /> with <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and element CLR type.</summary>
      <param name="model">The EDM model the given EDM type belongs to.</param>
      <param name="elementType">The EDM type of the element of the collection being queried.</param>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>Constructs an instance of <see cref="T:System.Web.Http.OData.ODataQueryContext" /> with <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and element CLR type.</summary>
      <param name="model">The EdmModel that includes the <see cref="T:Microsoft.Data.Edm.IEdmType" /> corresponding to the given <paramref name="elementClrType" /> .</param>
      <param name="elementClrType">The CLR type of the element of the collection being queried.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>Gets the CLR type of the element.</summary>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.IEdmType" /> of the element.</summary>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>Gets the given <see cref="T:Microsoft.Data.Edm.IEdmModel" /> that contains the EntitySet.</summary>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>A <see cref="T:System.Web.Http.ParameterBindingAttribute" /> to bind parameters of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> to the OData query from the incoming request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets the binding for a parameter.</summary>
      <returns>The <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> that contains the binding.</returns>
      <param name="parameter">The parameter to bind.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>Defines a controller-level attribute that can be used to enable OData action selection based on routing conventions.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataRoutingAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Callback invoked to set per-controller overrides for this controllerDescriptor.</summary>
      <param name="controllerSettings">The controller settings to initialize.</param>
      <param name="controllerDescriptor">The controller descriptor. Note that the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> can be associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> is inherited.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataUntypedActionParameters">
      <summary>ActionPayload holds the Parameter names and values provided by a client in a POST request to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataUntypedActionParameters.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataUntypedActionParameters" /> class.</summary>
      <param name="action">The OData action of this parameters.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataUntypedActionParameters.Action">
      <summary>Gets the OData action of this parameters.</summary>
      <returns>The OData action of this parameters.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.PageResult" /> class.</summary>
      <param name="nextPageLink">The link for the next page of items in the feed.</param>
      <param name="count">The total count of items in the feed.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Gets the total count of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Gets the link for the next page of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Creates a partial set of results - used when server driven paging is enabled.</summary>
      <param name="items">The subset of matching results that should be serialized in this page.</param>
      <param name="nextPageLink">A link to the next page of matching results (if more exists).</param>
      <param name="count">A total count of matching results so clients can know the number of matches on the server.</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <summary>Gets the collection of entities for this feed.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Web.Http.OData.TypedDelta">
      <summary>Represents a <see cref="T:System.Web.Http.OData.Delta" /> that can be used when a backing CLR type exists for the entity type whose changes are tracked.</summary>
    </member>
    <member name="M:System.Web.Http.OData.TypedDelta.#ctor"></member>
    <member name="P:System.Web.Http.OData.TypedDelta.EntityType">
      <summary>Gets the actual type of the entity for which the changes are tracked.</summary>
    </member>
    <member name="P:System.Web.Http.OData.TypedDelta.ExpectedClrType">
      <summary>Gets the expected type of the entity for which the changes are tracked.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ChangeSetRequestItem">
      <summary>Represents a ChangeSet request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ChangeSetRequestItem" /> class.</summary>
      <param name="requests">The request messages in the ChangeSet.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.ChangeSetRequestItem" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.GetResourcesForDisposal">
      <summary>Gets the resources registered for dispose on each request messages of the ChangeSet.</summary>
      <returns>A collection of resources registered for dispose.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ChangeSetRequestItem.Requests">
      <summary>Gets the request messages in the ChangeSet.</summary>
      <returns>The request messages in the ChangeSet.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Asynchronously sends the ChangeSet request.</summary>
      <returns>A <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" />.</returns>
      <param name="invoker">The invoker.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ChangeSetResponseItem">
      <summary> Represents a ChangeSet response. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpResponseMessage})">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" /> class. </summary>
      <param name="responses">The response messages for the ChangeSet requests.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ChangeSetResponseItem.Responses">
      <summary> Gets the response messages for the ChangeSet. </summary>
      <returns>The response messages for the ChangeSet.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Writes the responses as a ChangeSet.</summary>
      <returns>The task that performs the asynchronous operation.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.DefaultODataBatchHandler">
      <summary>Provides default implementation of <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /> for handling OData batch request. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.DefaultODataBatchHandler" /> class. </summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Asynchronously creates the batch response message.</summary>
      <returns>The batch response message.</returns>
      <param name="responses">The responses for the batch requests.</param>
      <param name="request">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The token for canceling the operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchRequestItem},System.Threading.CancellationToken)">
      <summary>Asynchronously executes the OData batch requests. </summary>
      <returns>A collection of <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> for the batch requests.</returns>
      <param name="requests">The collection of OData batch requests.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary> Gets the base URI for the batched requests. </summary>
      <returns>The base URI.</returns>
      <param name="request">The original request containing all the batch requests.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Converts the incoming OData batch request into a collection of request messages.</summary>
      <returns>A collection of <see cref="T:System.Web.Http.OData.Batch.ODataBatchRequestItem" />.</returns>
      <param name="request">The request containing the batch request messages.</param>
      <param name="cancellationToken">The token for canceling the operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Asynchronously processes the OData batch request.</summary>
      <returns>A task that represents the operation to process the batch request.</returns>
      <param name="request">The OData batch request.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary> Validates the incoming request that contains the batch request messages. </summary>
      <param name="request">The request containing the batch request messages.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchContent">
      <summary>Encapsulates a collection of OData batch responses.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" /> class.</summary>
      <param name="responses">The batch responses.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},Microsoft.Data.OData.ODataMessageWriterSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" /> class.</summary>
      <param name="responses">The batch responses.</param>
      <param name="writerSettings">The <see cref="T:Microsoft.Data.OData.ODataMessageWriterSettings" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchContent.Responses">
      <summary>Gets the batch responses.</summary>
      <returns>The batch responses.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Asynchronously serializes the object’s content to the given stream.</summary>
      <returns>A Task instance that is synchronously serializing the object’s content.</returns>
      <param name="stream">The Stream to which to write.</param>
      <param name="context">The associated TransportContext.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.TryComputeLength(System.Int64@)">
      <summary>Computes the length of the batch content.</summary>
      <returns>The length of the batch content to compute.</returns>
      <param name="length">The length in bytes of the batch content.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchHandler">
      <summary> Defines the abstraction for handling OData batch requests. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /> class. </summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchHandler.MessageQuotas">
      <summary> Gets the <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> used for reading/writing the batch request/response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchHandler.ODataRouteName">
      <summary> Gets or sets the name of the OData route associated with this batch handler. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataBatchId(System.Net.Http.HttpRequestMessage)">
      <summary> Retrieves the Batch ID associated with the request. </summary>
      <returns>The Batch ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataChangeSetId(System.Net.Http.HttpRequestMessage)">
      <summary> Retrieves the ChangeSet ID associated with the request. </summary>
      <returns>The ChangeSet ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataContentIdMapping(System.Net.Http.HttpRequestMessage)">
      <summary> Retrieves the Content-ID to Location mapping associated with the request. </summary>
      <returns>The Content-ID to Location mapping associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataBatchId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary> Associates a given Batch ID with the request. </summary>
      <param name="request">The request.</param>
      <param name="batchId">The Batch ID.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataChangeSetId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary> Associates a given ChangeSet ID with the request. </summary>
      <param name="request">The request.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataContentIdMapping(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary> Associates a given Content-ID to Location mapping with the request. </summary>
      <param name="request">The request.</param>
      <param name="contentIdMapping">The Content-ID to Location mapping.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchReaderExtensions">
      <summary> Provides extension methods for the <see cref="T:Microsoft.Data.OData.ODataBatchReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Guid,System.Boolean)">
      <summary> Reads an Operation request in a ChangeSet. </summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing a ChangeSet operation</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
      <summary>Reads an Operation request in a ChangeSet.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing a ChangeSet operation.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid)">
      <summary> Reads a ChangeSet request. </summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" /> in the ChangeSet.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch Id.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Threading.CancellationToken)">
      <summary>Reads a ChangeSet request.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" /> in the ChangeSet.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch Id.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Boolean)">
      <summary> Reads an Operation request. </summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing the operation.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Boolean,System.Threading.CancellationToken)">
      <summary>Reads an Operation request.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing the operation.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchRequestItem">
      <summary>Represents an OData batch request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchRequestItem" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchRequestItem" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.Dispose(System.Boolean)">
      <summary> Releases unmanaged and - optionally - managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.GetResourcesForDisposal">
      <summary>Gets the resources for disposal.</summary>
      <returns>A collection of resources for disposal.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.SendMessageAsync(System.Net.Http.HttpMessageInvoker,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>Sends a single OData batch request.</summary>
      <returns>The action request.</returns>
      <param name="invoker">The invoker.</param>
      <param name="request">The request.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <param name="contentIdToLocationMapping">The Content-ID to Location mapping.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary> Sends the request. </summary>
      <returns>A <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" />.</returns>
      <param name="invoker">The invoker.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchResponseItem">
      <summary>Represents an OData batch response.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> class and optionally releases managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.Data.OData.ODataBatchWriter,System.Net.Http.HttpResponseMessage)">
      <summary>Asynchronously writes a single OData batch response.</summary>
      <returns>Synchronously writes a single OData batch response.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
      <param name="response">The response message.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.Data.OData.ODataBatchWriter,System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Asynchronously writes a single OData batch response.</summary>
      <returns>The task that synchronously writes a single OData batch response.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
      <param name="response">The response message.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Asynchronously writes the response.</summary>
      <returns>The task that synchronously writes the response.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataHttpContentExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpContent" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.Data.OData.ODataMessageReaderSettings)">
      <summary> Gets the <see cref="T:Microsoft.Data.OData.ODataMessageReader" /> for the <see cref="T:System.Net.Http.HttpContent" /> stream. </summary>
      <returns>A <see cref="T:Microsoft.Data.OData.ODataMessageReader" />.</returns>
      <param name="content">The <see cref="T:System.Net.Http.HttpContent" />.</param>
      <param name="settings">The <see cref="T:Microsoft.Data.OData.ODataMessageReaderSettings" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.Data.OData.ODataMessageReaderSettings,System.Threading.CancellationToken)">
      <summary>Gets the <see cref="T:Microsoft.Data.OData.ODataMessageReader" /> for the <see cref="T:System.Net.Http.HttpContent" /> stream.</summary>
      <returns>A <see cref="T:Microsoft.Data.OData.ODataMessageReader" />.</returns>
      <param name="content">The <see cref="T:System.Net.Http.HttpContent" />.</param>
      <param name="settings">The <see cref="T:Microsoft.Data.OData.ODataMessageReaderSettings" />.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.OperationRequestItem">
      <summary> Represents an OData batch operation request. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.OperationRequestItem" /> class. </summary>
      <param name="request">The operation request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.OperationRequestItem" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.GetResourcesForDisposal">
      <summary> Gets the resources registered for dispose on the operation request message. </summary>
      <returns>A collection of resources registered for dispose.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Batch.OperationRequestItem.Request">
      <summary> Gets the batch operation request. </summary>
      <returns>The batch operation request.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Asynchronously sends the operation request. </summary>
      <returns>A <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" />.</returns>
      <param name="invoker">The invoker.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.OperationResponseItem">
      <summary>Represents an Operation response.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" /> class.</summary>
      <param name="response">The response messages for the Operation request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.OperationResponseItem.Response">
      <summary>Gets the response messages for the Operation.</summary>
      <returns>The response messages for the Operation.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter,System.Threading.CancellationToken)">
      <summary>Writes the response as an Operation.</summary>
      <returns>A task that asynchronously writes the response.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /> that doesn't buffer the request content stream.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Creates the batch response message.</summary>
      <returns>The batch response message.</returns>
      <param name="responses">The responses for the batch requests.</param>
      <param name="request">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ExecuteChangeSetAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Executes the ChangeSet.</summary>
      <returns>The response for the ChangeSet.</returns>
      <param name="batchReader">The batch reader.</param>
      <param name="batchId">The batch id.</param>
      <param name="originalRequest">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ExecuteOperationAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Executes the operation.</summary>
      <returns>The response for the operation.</returns>
      <param name="batchReader">The batch reader.</param>
      <param name="batchId">The batch id.</param>
      <param name="originalRequest">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the base URI for the batched requests.</summary>
      <returns>The base URI.</returns>
      <param name="request">The original request containing all the batch requests.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Asynchronously process the batch data.</summary>
      <returns>The task that completes the process.</returns>
      <param name="request">The batch request.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Validates the incoming request that contains the batch request messages.</summary>
      <param name="request">The request containing the batch request messages.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary>ActionConfiguration represents an OData action that you wish to expose via your service.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Adds a new non-binding parameter.</summary>
      <returns>A new non-binding parameter.</returns>
      <param name="name">The name of the parameter.</param>
      <param name="parameterType">The type of parameter.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary>Get the bindingParameter.</summary>
      <returns>The bindingParameter.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary>Adds a new non-binding collection parameter.</summary>
      <returns>A new non-binding collection parameter.</returns>
      <param name="name">The name.</param>
      <typeparam name="TElementType">Base type of element.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions">
      <summary>Gets a value indicating whether links provided by <see cref="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink" /> follow OData conventions.</summary>
      <returns>true if the links provided by <see cref="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink" /> follow OData conventions; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary>Retrieves the currently registered action link factory.</summary>
      <returns>The currently registered action link factory.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Register a factory that creates actions links.</summary>
      <returns>A factory that crates actions links.</returns>
      <param name="actionLinkFactory">The actionLinkFactory this ActionLinkBuilder should use when building links.</param>
      <param name="followsConventions">A value indicating whether the action link factory generates links that follow OData conventions.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary>Whether this action can always be bound. For example, imagine a Watch action that can be bound to a Movie: it might not always be possible to Watch a movie, in which case IsAlwaysBindable would return false.</summary>
      <returns>true if this action can always be bound; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable">
      <summary>Gets a value whether the action can be found to a url representing the BindingParameter.</summary>
      <returns>true if the action can be found to a url representing the BindingParameter; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind">
      <summary>Gets the Kind of procedure, which can be either Action, Function or ServiceOperation.</summary>
      <returns>The Kind of procedure.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary>Adds a new non-binding parameter.</summary>
      <returns>A new non-binding parameter.</returns>
      <param name="name">The name of the parameter.</param>
      <typeparam name="TParameter">The generic type parameter.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters">
      <summary>Gets the parameters the action takes.</summary>
      <returns>The parameters the action takes.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary>Established the return type of the Action.</summary>
      <returns>The type of this <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <typeparam name="TReturnType">The type that is a ReturnType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary>Establishes the return type of the Action Used when the return type is a collection of either Primitive or ComplexTypes.</summary>
      <returns>The return type of this <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <typeparam name="TReturnElementType">The type of this ReturnElementType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary>Sets the return type to a collection of EntityType instances.</summary>
      <returns>The return type of this <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetName">The entitySetName which contains the returned EntityType instances</param>
      <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Sets the return type to a collection of entities.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetConfiguration">The entity set which contains the returned entities.</param>
      <typeparam name="TElementEntityType">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>The return type of this <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetName">The entitySetName which contains the return EntityType instance</param>
      <typeparam name="TEntityType">The type that is an EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Sets the return type to a single EntityType instance.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="entitySetConfiguration">The entity set which contains the returned entity.</param>
      <typeparam name="TEntityType">The type that is an EntityType.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary>Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the Action "isBindable".</summary>
      <returns>The binding parameter of this <see cref="T:System.Web.Http.OData.Builder.ActionConfiguration" />.</returns>
      <param name="name">The name of the parameter.</param>
      <param name="bindingParameterType">The binding parameter type.</param>
      <param name="alwaysBindable">true if always bindable; otherwise, false.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary>ActionLinkBuilder can be used to annotate an Action. This is how formatters create links to invoke bound actions.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Create a new ActionLinkBuilder based on an actionLinkFactory.</summary>
      <param name="actionLinkFactory">The actionLinkFactory this ActionLinkBuilder should use when building links.</param>
      <param name="followsConventions">A value indicating whether the action link factory generates links that follow OData conventions.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)">
      <summary>Builds the action link for the given entity.</summary>
      <returns>The generated action link.</returns>
      <param name="context">An instance context wrapping the entity instance.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary>Creates an action link factory that builds an action link, but only when appropriate based on the expensiveAvailabilityCheck, and whether expensive checks should be made, which is deduced by looking at the EntityInstanceContext.SkipExpensiveActionAvailabilityChecks property.</summary>
      <returns>The new action link factory.</returns>
      <param name="baseFactory">The action link factory that actually builds links if all checks pass.</param>
      <param name="expensiveAvailabilityCheck">The availability check function that is expensive but when called returns whether the action is available.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions">
      <summary>Gets a boolean indicating whether the link factory follows OData conventions or not.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary>Represents a BindingParameter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary>Create a BindingParameterConfiguration</summary>
      <param name="name">The name of the Binding Parameter</param>
      <param name="parameterType">The type of the Binding Parameter</param>
      <param name="alwaysBindable">Whether the action can always be bound to instances of the binding parameter.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary>Indicates whether the BindingParameter is always bindable or not. For example some actions are always available some are only available at certain times or in certain states.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName">
      <summary>The default parameter name for an action’s binding parameter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration represents a CollectionProperty on either an EntityType or ComplexType.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Constructs a CollectionPropertyConfiguration using the <paramref name="property" /> provided.</summary>
      <param name="property">The property of the collection.</param>
      <param name="declaringType">The declaring type of the configuration.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Returns the type of Elements in the Collection</summary>
      <returns>The type of elements in the Collection.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Sets the CollectionProperty to optional (i.e. nullable).</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> object.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Sets the CollectionProperty to required (i.e. non-nullable).</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> object.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> of this collection.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> of this collection.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
      <summary>Gets the CLR type of the collection.</summary>
      <returns>The CLR type of the collection.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Represents a Collection of some named type. For example, Collection(Namespace.Customer) or Collection(Namespace.Adress).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Constructs a collection that contains elements of the specified ElementType and that is represented in CLR using the specified clrType.</summary>
      <param name="elementType">The EdmTypeConfiguration of the elements in the collection</param>
      <param name="clrType">The type of this collection when manifested in CLR.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <summary>Gets the CLR type associated with this collection type.</summary>
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> of elements in this collection.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <summary>Gets the full name (including namespace) of this collection type.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <summary>Gets the kind of the EdmType. In this case, it is <see cref="F:Microsoft.Data.Edm.EdmTypeKind.Collection" />.</summary>
      <returns>Returns <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <summary>Gets the associated <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <summary>Gets the name of this collection type.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <summary>Gets the namespace of this collection type.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration">
      <summary>Represents the configuration for a complex property of a structural type (an entity type or a complex type).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> class.</summary>
      <param name="property">The property of the configuration.</param>
      <param name="declaringType">The declaring type of the property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional">
      <summary>Marks the current complex property as optional.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired">
      <summary>Marks the current complex property as required.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind">
      <summary>Gets the kind of this property.</summary>
      <returns>The kind of this property.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType">
      <summary>Gets the CLR type of this property.</summary>
      <returns>The CLR type of this property.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>Allows configuration to be performed for a complex type in a model. A ComplexTypeConfiguration can be obtained by using the method <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> being used.</param>
      <param name="clrType">The backing CLR type for this entity type.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind">
      <summary>Gets or sets the kind of EDM metatypes for the complex type configuration.</summary>
      <returns>The kind of EDM metatypes for the complex type configuration.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration represents a Collection of Entities. This class can be used to configure things that get bound to entities, like Actions bound to a collection.</summary>
      <typeparam name="TEntityType">The EntityType that is the ElementType of the EntityCollection</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Creates a new Action that binds to Collection(EntityType).</summary>
      <returns>An ActionConfiguration to allow further configuration of the Action.</returns>
      <param name="name">The name of the Action</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Creates a new Action that sometimes binds to Collection(EntityType).</summary>
      <returns>An ActionConfiguration to allow further configuration of the Action.</returns>
      <param name="name">The name of the Action</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>Allows configuration to be performed for an entity set in a model. A <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> can be obtained by using the method <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">The CLR <see cref="T:System.Type" /> of the entity type contained in this entity set.</param>
      <param name="name">The name of the entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">The CLR <see cref="T:System.Type" /> of the entity type contained in this entity set.</param>
      <param name="name">The name of the entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Binds the given navigation property to the target entity set.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="targetEntitySet">The target entity set.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>Gets the navigation targets of this entity set.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>Gets the backing clr type for the entity type contained in this entity set.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>Gets the entity type contained in this entity set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> for the navigation property with the given name.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />.</returns>
      <param name="propertyName">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Finds the binding for the given navigation property and tries to create it if it does not exist.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Finds the binding for the given navigation property.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> so that it can be further configured.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="autoCreate">Tells whether the binding should be auto created if it does not exist.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>Gets the builder used to generate edit links for entries from this entity set.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Gets the builder used to generate self links for feeds for this entity set.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>Gets the builder used to generate ID for entries from this entity set.</summary>
      <returns>The builder.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Gets the builder used to generate navigation link for the given navigation property for entries from this entity set.</summary>
      <returns>The link builder.</returns>
      <param name="navigationProperty">The navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>Gets the builder used to generate read links for entries from this entity set.</summary>
      <returns>The link builder.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl">
      <summary>Gets the entity set URL.</summary>
      <returns>The entity set URL.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the edit link for the entities from this entity set.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="editLinkBuilder">The builder used to generate the edit link.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Adds a self link to the feed.</summary>
      <returns>The entity set configuration currently being configured.</returns>
      <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})">
      <summary>Configures the ID for the entities from this entity set.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="idLinkBuilder">The builder used to generate the ID.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Configures the navigation link for the given navigation properties for entities from this entity set.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
      <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Configures the navigation link for the given navigation property for entities from this entity set.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
      <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Configures the read link for the entities from this entity set.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="readLinkBuilder">The builder used to generate the read link.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>Configures the entity set URL.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="url">The entity set URL.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>Gets the name of this entity set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Removes the binding for the given navigation property.</summary>
      <param name="navigationConfiguration">The navigation property</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TEntityType">The element type of the entity set.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType">
      <summary>Gets the entity type contained in this entity set.</summary>
      <returns>The entity type contained in this entity set.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)">
      <summary>Finds the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> for the navigation property with the given name.</summary>
      <returns>The binding, if found; otherwise, null.</returns>
      <param name="propertyName">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Finds the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> for the navigation property or creates it if it does not exist.</summary>
      <returns>The binding if found; else the created binding.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Finds the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> for the given navigation property.</summary>
      <returns>The binding if found.</returns>
      <param name="navigationConfiguration">The navigation property.</param>
      <param name="autoCreate">true to create the binding if it is not found; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Configures the edit link for the entities from this entity set.</summary>
      <param name="editLinkFactory">The factory used to generate the edit link.</param>
      <param name="followsConventions">true to indicate that the factory follows OData edit link conventions; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Configures the edit link for the entities from this entity set.</summary>
      <param name="editLinkFactory">The factory used to generate the edit link.</param>
      <param name="followsConventions">true to indicate that the factory follows OData edit link conventions; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary>Adds a self link to the feed.</summary>
      <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Adds a self link to the feed.</summary>
      <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Configures the ID link for the entities from this entity set.</summary>
      <param name="idLinkFactory">The factory used to generate the ID link.</param>
      <param name="followsConventions">true to indicate that the factory follows OData ID link conventions; otherwise, false .</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Configures a many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target entity set name for the binding. It will be created if it does not exist.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Configures a many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">The target entity set name for the binding. It will be created if it does not exist.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Configures a many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target entity set name for the binding. It will be created if it does not exist.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Configures a many relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">The target entity set name for the binding. It will be created if it does not exist.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Configures the navigation link for the given navigation properties for entities from this entity set.</summary>
      <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
      <param name="navigationLinkFactory">The factory used to generate the navigation link.</param>
      <param name="followsConventions">Represents a value indicating whether the factory follows OData navigation link conventions or not.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Configures the navigation link for the given navigation property for entities from this entity set.</summary>
      <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
      <param name="navigationLinkFactory">The factory used to generate the navigation link.</param>
      <param name="followsConventions">Represents a value indicating whether the factory follows OData navigation link conventions or not.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target entity set name for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">The target entity set for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target entity set name for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Configures an optional relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">The target entity set for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Configures the read link for the entities from this entity set.</summary>
      <param name="readLinkFactory">The builder used to generate the read link.</param>
      <param name="followsConventions">Represents a value indicating whether the factory follows OData conventions or not.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Configures the read link for the entities from this entity set.</summary>
      <param name="readLinkFactory">The builder used to generate the read link.</param>
      <param name="followsConventions">Represents a value indicating whether the factory follows OData conventions or not.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target entity set name for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">The target entity set for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
      <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">The target entity set name for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Configures a required relationship from this entity type and binds the corresponding navigation property to the given entity set.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">The target entity set for the binding.</param>
      <typeparam name="TTargetType">The target entity set type.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> is a class used to annotate an <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> inside an <see cref="T:Microsoft.Data.Edm.IEdmModel" /> with information about how to build links related to that entity set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(Microsoft.Data.Edm.IEdmEntitySet,Microsoft.Data.Edm.IEdmModel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> class.</summary>
      <param name="entitySet">The entity set for which the link builder is being constructed.</param>
      <param name="model">The EDM model that this entity set belongs to.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(Microsoft.Data.Edm.IEdmEntitySet,System.Func{System.Web.Http.OData.FeedContext,System.Uri},System.Web.Http.OData.Builder.SelfLinkBuilder{System.String},System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri},System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Constructs an instance of an <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Constructs an instance of an <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> from an <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.AddNavigationPropertyLinkBuilder(Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Register a link builder for a <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> that navigates from Entities in this EntitySet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildEditLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel,System.String)">
      <summary>Constructs the EditLink URL for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildEntitySelfLinks(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs the <see cref="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks" /> for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildFeedSelfLink(System.Web.Http.OData.FeedContext)">
      <summary>Build a self-link URI given a <see cref="T:System.Web.Http.OData.FeedContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildIdLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs the IdLink for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildNavigationLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs a NavigationLink for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" />, <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildReadLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel,System.Uri)">
      <summary>Constructs a ReadLink URL for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" /> class.</summary>
      <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> being used.</param>
      <param name="clrType">The CLR type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Marks this entity type as abstract.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a new EDM collection property to this entity type.</summary>
      <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> of the added property.</returns>
      <param name="propertyInfo">The backing CLR property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a new EDM complex property to this entity type.</summary>
      <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> of the added property.</returns>
      <param name="propertyInfo">The backing CLR property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>Adds a new EDM navigation property to this entity type.</summary>
      <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> of the added property.</returns>
      <param name="navigationProperty">The backing CLR property.</param>
      <param name="multiplicity">The <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> of the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a new EDM primitive property to this entity type.</summary>
      <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> of the added property.</returns>
      <param name="propertyInfo">The backing CLR property.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Gets or sets the base type of this entity type.</summary>
      <returns>The base type of this entity type.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <summary>Gets a value that represents whether the base type is explicitly configured or inferred.</summary>
      <returns>true the base type is explicitly configured or inferred; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Sets the base type of this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="baseType">The base entity type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Sets the base type of this entity type to null meaning that this entity type does not derive from anything.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Configures the key property(s) for this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="keyProperty">The property to be added to the key properties of this entity type.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>Gets or sets a value indicating whether this type is abstract.</summary>
      <returns>A value indicating whether this type is abstract. Set to null.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Gets the collection of keys for this entity type.</summary>
      <returns>The collection of keys for this entity type.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> of this <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> of this <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Gets the collection of <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> of this entity type.</summary>
      <returns>The collection of <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> of this entity type.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Removes the property from the entity keys collection.</summary>
      <param name="keyProperty">The key to be removed.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Removes the property from the entity.</summary>
      <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo" /> of the property to be removed.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TEntityType">The backing CLR type for this <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> .</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Marks this entity type as abstract.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Create an Action that binds to this EntityType.</summary>
      <returns>The ActionConfiguration to allow further configuration of the new Action.</returns>
      <param name="name">The name of the action.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Gets the base type of this entity type.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Used to access a Collection of Entities throw which you can configure actions that are bindable to EntityCollections.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Sets the base type of this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <typeparam name="TBaseType">The base entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Sets the base type of this entity type to null meaning that this entity type does not derive from anything.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures the key property(s) for this entity type.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
      <param name="keyDefinitionExpression">A lambda expression representing the property to be used as the primary key. For example, in C# t =&amp;amp;gt; t.Id and in Visual Basic .Net Function(t) t.Id.</param>
      <typeparam name="TKey">The type of key.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Configures a many relationship from this entity type.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures an optional relationship from this entity type.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configures a required relationship from this entity type.</summary>
      <returns>A configuration object that can be used to further configure the relationship.</returns>
      <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Gets the collection of <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> of this entity type.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>Create an Action that sometimes binds to this EntityType</summary>
      <returns>The ActionConfiguration to allow further configuration of the new 'transient' Action.</returns>
      <param name="name">The name of the action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>Represents an EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>The CLR type associated with the EdmType.</summary>
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>The full name (including namespace) of the EdmType.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>The kind of the EdmType. Examples include EntityType, ComplexType, PrimitiveType, CollectionType.</summary>
      <returns>Returns <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>The ODataModelBuilder used to create this IEdmType.</summary>
      <returns>Returns <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>The name of the EdmType.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>The namespace of the EdmType.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.LinkGenerationHelpers">
      <summary>Contains helper methods for generating OData links that follow OData URL conventions.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateActionLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmFunctionBase)">
      <summary>Generates an action link following the OData URL conventions for the <paramref name="action" /> and bound to the entity represented by <paramref name="entityContext" />.</summary>
      <returns>The generated action link following OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> representing the entity for which the action link needs to be generated.</param>
      <param name="action">The action for which the action link needs to be generated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateFeedSelfLink(System.Web.Http.OData.FeedContext)">
      <summary>Generates a feed self link following the OData URL conventions for the feed represented by <paramref name="feedContext" />.</summary>
      <returns>The generated feed self link following the OData URL conventions.</returns>
      <param name="feedContext">The <see cref="T:System.Web.Http.OData.FeedContext" /> representing the feed for which the self link needs to be generated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateNavigationPropertyLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Boolean)">
      <summary>Generates a navigation link following the OData URL conventions for the entity represented by entityContext and the given navigation property.</summary>
      <returns>The navigation link following the OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> representing the entity for which the navigation link needs to be generated.</param>
      <param name="navigationProperty">The EDM navigation property.</param>
      <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateSelfLink(System.Web.Http.OData.EntityInstanceContext,System.Boolean)">
      <summary>Generates a self link following the OData URL conventions for the entity represented by entityContext.</summary>
      <returns>The self link following the OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> representing the entity for which the self link needs to be generated.</param>
      <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder">
      <summary>Encapsulates a navigation link factory and whether the link factory follows conventions or not.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" /> class.</summary>
      <param name="navigationLinkFactory">The navigation link factory for creating navigation links.</param>
      <param name="followsConventions">Represents whether this factory follows OData conventions or not.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory">
      <summary>Gets the navigation link factory for creating navigation links.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions">
      <summary>Gets a value representing whether this factory follows OData conventions or not.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Used to configure the binding for a navigation property for an entity set. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> class.</summary>
      <param name="navigationProperty">The navigation property for the binding.</param>
      <param name="entitySet">The target entity set of the binding.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Gets the target entity set of the binding.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Gets the navigation property of the binding.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration">
      <summary>Represents the configuration for a navigation property of an entity type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> class.</summary>
      <param name="property">The backing CLR property.</param>
      <param name="multiplicity">The <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> .</param>
      <param name="declaringType">The declaring entity type.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType">
      <summary>Gets the declaring entity type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> of this property.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> of this navigation property.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional">
      <summary>Marks the navigation property as optional.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType">
      <summary>Gets the backing CLR type of this property type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required">
      <summary>Marks the navigation property as required.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary> Represents a non-binding procedure parameter.   Non-binding parameters are provided in the POST body for Actions Non-binding parameters are provided in 3 ways for Functions - ~/.../Function(p1=value) - ~/.../Function(p1=@x)?@x=value - ~/.../Function?p1=value (only allowed if the Function is the last url path segment).   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" /> class.</summary>
      <param name="name">The name of the parameter.</param>
      <param name="parameterType">The EDM type of the parameter.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>Used to automatically map CLR classes to an EDM model based on a set of <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Initializes a new <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> to use.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> class.</summary>
      <param name="configuration">The configuration to use.</param>
      <param name="isQueryCompositionMode">true if the mode is query composition; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
      <summary>Registers a complex type as part of the model and returns an object that can be used to configure the entity.</summary>
      <returns>The configuration object for the specified complex type.</returns>
      <param name="type">The type to be registered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)">
      <summary>Registers an entity type as part of the model and returns an object that can be used to configure the entity.</summary>
      <returns>The configuration object for the specified entity type.</returns>
      <param name="type">The type to be registered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Registers an entity set as a part of the model and returns an object that can be used to configure the entity set.</summary>
      <returns>The configuration object for the specified entity set.</returns>
      <param name="name">The name of the entity set.</param>
      <param name="entityType">The type to be registered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
      <summary>Creates an <see cref="T:Microsoft.Data.Edm.IEdmModel" /> based on the configuration performed using this builder.</summary>
      <returns>The model that was built.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <summary>Excludes a type or types from the model. This is used to remove types from the model that were added by convention during initial model discovery.</summary>
      <returns>The same <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> so that multiple calls can be chained.</returns>
      <typeparam name="T">The type of the data.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <summary>Excludes a type or types from the model. This is used to remove types from the model that were added by convention during initial model discovery.</summary>
      <returns>The same <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> so that multiple calls can be chained.</returns>
      <param name="types">The types to be excluded from the model.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>This action is invoked after the <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> has run all the conventions, but before the configuration is locked down and used to build the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> .</summary>
      <returns>The action to modify the <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> configuration that has been inferred by convention.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>Represents a model builder that is used to map CLR classes to an EDM model.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Adds a non-bindable action to the builder.</summary>
      <returns>The configuration object for the specified action.</returns>
      <param name="name">The name of the action.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Registers a complex type as part of the model and returns an object that can be used to configure the entity. This method can be called multiple times for the same entity to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified complex type.</returns>
      <param name="type">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>Registers an entity type as part of the model and returns an object that can be used to configure the entity. This method can be called multiple times for the same entity to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity type.</returns>
      <param name="type">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Registers an entity set as a part of the model and returns an object that can be used to configure the entity set. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity set.</returns>
      <param name="name">The name of the entity set.</param>
      <param name="entityType">The type to be registered or configured.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Adds a procedure to the model.</summary>
      <param name="procedure">The procedure to be added.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>Registers a type as a complex type in the model and returns an object that can be used to configure the complex type. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified complex type.</returns>
      <typeparam name="TComplexType">The type to be registered or configured.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Gets or sets the name of the container that will hold all the entity sets, actions and functions.</summary>
      <returns>The name of the container</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Gets or sets the data service version of the model. The default value is 3.0.</summary>
      <returns>The data service version of the model.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>Registers an entity type as part of the model and returns an object that can be used to configure the entity. This method can be called multiple times for the same entity to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity type.</returns>
      <typeparam name="TEntityType">The type to be registered or configured.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Registers an entity set as a part of the model and returns an object that can be used to configure the entity set. This method can be called multiple times for the same type to perform multiple lines of configuration.</summary>
      <returns>The configuration object for the specified entity set.</returns>
      <param name="name">The name of the entity set.</param>
      <typeparam name="TEntityType">The entity type of the entity set.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Gets the collection of EDM entity sets in the model to be built.</summary>
      <returns>The collection of EDM entity sets in the model to be built.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>Creates and returns a <see cref="T:Microsoft.Data.Edm.IEdmModel" /> based on the configuration performed using this builder.</summary>
      <returns>The model that was built.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Attempts to find either a pre-configured structural type or a primitive type that matches the <paramref name="type" />. If no matches are found null is returned.</summary>
      <returns>A pre-configured structural type or a primitive type if found; otherwise, null.</returns>
      <param name="type">The type to find.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Gets or sets the maximum data service version of the model. The default value is 3.0.</summary>
      <returns>The maximum data service version of the model.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Gets or sets the namespace that will be used for the resulting model.</summary>
      <returns>The namespace that will be used for the resulting model.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Gets the collection of procedures (such as actions, functions and service operations) in the model to be built</summary>
      <returns>The collection of procedures.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Removes the entity set from the model.</summary>
      <returns>true if the entity set is present in the model; false otherwise.</returns>
      <param name="name">The name of the entity set to be removed.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>Removes the procedure from the model.</summary>
      <returns>true if the procedure is present in the model; false otherwise.</returns>
      <param name="name">The name of the procedure to be removed.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Removes the procedure from the model.</summary>
      <returns>true if the procedure is present in the model; false otherwise.</returns>
      <param name="procedure">The procedure to be removed.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Removes the type from the model.</summary>
      <returns>true if the type is present in the model and false otherwise.</returns>
      <param name="type">The type to be removed.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Gets the collection of EDM structural types in the model to be built.</summary>
      <returns>The collection of EDM structural types in the model.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>Represents a parameter to a Procedure.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.ParameterConfiguration" /> class.</summary>
      <param name="name">The name of the parameter.</param>
      <param name="parameterType">The EDM type of the parameter.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>The name of the parameter.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>The type of the parameter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Used to configure a primitive property of an entity type or complex type. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> class.</summary>
      <param name="property">The name of the property.</param>
      <param name="declaringType">The declaring EDM type of the property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Configures the property to be optional.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Configures the property to be required.</summary>
      <returns>Returns itself so that multiple calls can be chained.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind">
      <summary>Gets the type of this property.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType">
      <summary>Gets the backing CLR type of this property type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Represents a PrimitiveType</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>This constructor is public only for unit testing purposes. To get a PrimitiveTypeConfiguration use ODataModelBuilder.GetTypeConfigurationOrNull(Type).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType">
      <summary>Gets the backing CLR type of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Returns the IEdmPrimitiveType associated with this PrimitiveTypeConfiguration</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName">
      <summary>Gets the full name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder">
      <summary>Gets the associated <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name">
      <summary>Gets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace">
      <summary>Gets the namespace of this EDM type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>Represents a Procedure that is exposed in the model.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.ProcedureConfiguration" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>Gets the qualified name of the procedure when used in OData urls. Qualification is required to distinguish the procedure from other possible single part identifiers.</summary>
      <returns>The qualified name of the procedure when used in OData urls.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>Gets or sets the EntitySet that entities are returned from.</summary>
      <returns>The EntitySet that entities are returned from.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>Gets the FullName that is the ContainerQualifiedName.</summary>
      <returns>The FullName that is the ContainerQualifiedName.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>Gets the FullyQualifiedName is the ContainerQualifiedName further qualified using the Namespace. Typically this is not required, because most services have at most one container with the same name.</summary>
      <returns>The FullyQualifiedName that is the ContainerQualifiedName</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>If the procedure IsBindable is it Always bindable.</summary>
      <returns>true if the procedure is always bindable; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>Can the procedure be bound to a url representing the BindingParameter.</summary>
      <returns>true if the procedure is bindable; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>Can the procedure be composed upon. For example can a URL that invokes the procedure be used as the base url for a request that invokes the procedure and does something else with the results.</summary>
      <returns>true if the procedure is composable; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>Does the procedure have side-effects.</summary>
      <returns>true if the procedure has side effects; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>Gets the Kind of procedure, which can be either Action, Function or ServiceOperation.</summary>
      <returns>The kind of procedure.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder">
      <summary>Gets or sets the associated <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <returns>The associated <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>Gets or sets the Name of the procedure.</summary>
      <returns>The Name of the procedure.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>Gets the parameters the procedure takes.</summary>
      <returns>The parameters the procedure takes.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>Gets or sets the type returned when the procedure is invoked.</summary>
      <returns>The type returned when the procedure is invoked.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>The Kind of OData Procedure. One of Action, Function or ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary>An action.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary>A function.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary>A service operation.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>Base class for all property configurations.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.PropertyConfiguration" /> class.</summary>
      <param name="property">The name of the property.</param>
      <param name="declaringType">The declaring EDM type of the property.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <summary>Gets or sets a value that is true if the property was added by the user; false if it was inferred through conventions.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <summary>Gets the declaring type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> of the property.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>Gets the name of the property.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Gets the mapping CLR <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Gets the CLR <see cref="T:System.Type" /> of the property.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind">
      <summary>The kind of the EDM property.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>Represents an EDM collection property.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>Represents an EDM complex property.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>Represents an EDM navigation property.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>Represents an EDM primitive property.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary> Encapsulates a self-link factory and whether the link factory follows conventions or not. </summary>
      <typeparam name="T">The type of the self link generated. This should be  for ID links and  for read and edit links.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary> Constructs a new instance of <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" />. </summary>
      <param name="linkFactory">The link factory.</param>
      <param name="followsConventions">Whether the factory follows odata conventions for link generation.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary> Gets the factory for generating links. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary> Gets a boolean indicating whether the link factory follows OData conventions or not. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>Base class for all structural property configurations.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration" /> class.</summary>
      <param name="property">The property of the configuration.</param>
      <param name="declaringType">The declaring type of the property.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty">
      <summary>Gets or sets a value indicating whether this property is optional or not.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" /> class.</summary>
      <param name="modelBuilder">The associated <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">The backing CLR type for this EDM structural type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a collection property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a complex property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Adds a primitive property to this edm type.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> so that the property can be configured further.</returns>
      <param name="propertyInfo">The property being added.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Gets the backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties">
      <summary>Gets the collection of explicitly added properties.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Gets the full name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Gets the properties from the backing CLR type that are to be ignored on this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Gets the name of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Gets the namespace of this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Gets the declared properties on this EDM type.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties">
      <summary>Gets the collection of explicitly removed properties.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Removes the given property.</summary>
      <param name="propertyInfo">The property being removed.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" /> class.</summary>
      <param name="configuration">The inner configuration of the structural type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Adds a collection property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="TElementType">The element type of the collection.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Adds a complex property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="TComplexType">The complex type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Excludes a property from the type.</summary>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="TProperty">The property type.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties">
      <summary>Gets the collection of EDM structural properties that belong to this type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary>Adds a binary property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})">
      <summary>Adds a stream property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Adds an optional primitive property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="T">The primitive property type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>Adds a string property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Adds a required primitive property to the EDM type.</summary>
      <returns>A configuration object that can be used to further configure the property.</returns>
      <param name="propertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t =&amp;gt; t.MyProperty and in Visual Basic .NET Function(t) t.MyProperty .</param>
      <typeparam name="T">The primitive property type.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping">
      <summary>Represents the media type mapping that associates requests for the raw value of binary properties to the application/octet-stream content type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary>Returns a value indicating whether the current object is match to the property segment.</summary>
      <returns>true if the current object is match to the property segment; false.</returns>
      <param name="propertySegment">The property segment.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>Represents the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to handle OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataPayloadKind})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" /> class.</summary>
      <param name="payloadKinds">The kind of payloads this formatter supports.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataPayloadKind})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" /> class.</summary>
      <param name="deserializerProvider">The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> to use.</param>
      <param name="serializerProvider">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> to use.</param>
      <param name="payloadKinds">The kind of payloads this formatter supports.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)">
      <summary>Queries whether this MediaTypeFormatter can deserialize an object of the specified type.</summary>
      <returns>true if the MediaTypeFormatter can deserialize the type; otherwise, false.</returns>
      <param name="type">The type to deserialize.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)">
      <summary>Queries whether this MediaTypeFormatter can serialize an object of the specified type.</summary>
      <returns>true if the MediaTypeFormatter can serialize the type; otherwise, false.</returns>
      <param name="type">The type to serialize.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.DeserializerProvider">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> that will be used by this formatter instance.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> that will be used by this formatter instance.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Returns a specialized instance of the MediaTypeFormatter that can format a response for the given parameters.</summary>
      <returns>Returns <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
      <param name="type">The type to format.</param>
      <param name="request">The request.</param>
      <param name="mediaType">The media type.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> that this formatter uses on the reader side.</summary>
      <returns>The <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> that this formatter uses on the reader side.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderSettings">
      <summary>Gets the settings to be use while reading requests.</summary>
      <returns>The settings to be use while reading requests.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> that this formatter uses on the writer side.</summary>
      <returns>The <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> that this formatter uses on the writer side.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterSettings">
      <summary>Gets the settings to be use while writing responses.</summary>
      <returns>The settings to be use while writing responses.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Asynchronously deserializes an object of the specified type.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> whose result will be an object of the given type.</returns>
      <param name="type">The type of the object to deserialize.</param>
      <param name="readStream">The stream to read.</param>
      <param name="content">The HttpContent, if available. It may be null.</param>
      <param name="formatterLogger">The IFormatterLogger to log events to.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SerializerProvider">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> that will be used by this formatter instance.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> that will be used by this formatter instance.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Sets the default headers for content that will be formatted using this formatter. This method is called from the ObjectContent constructor. This implementation sets the Content-Type header to the value of mediaType if it is not null. If it is null it sets the Content-Type to the default media type of this formatter. If the Content-Type does not specify a charset it will set it using this formatters configured Encoding.</summary>
      <param name="type">The type of the object being serialized.</param>
      <param name="headers">The content headers that should be configured.</param>
      <param name="mediaType">The authoritative media type. Can be null.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary>Asynchronously writes an object of the specified type.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will perform the write.</returns>
      <param name="type">The type of the object to write.</param>
      <param name="value">The object value to write. It may be null.</param>
      <param name="writeStream">The Stream to which to write.</param>
      <param name="content">The HttpContent if available. It may be null.</param>
      <param name="transportContext">The TransportContext if available. It may be null.</param>
      <param name="cancellationToken">The token to cancel the operation.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> classes to handle OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary> Creates a list of media type formatters to handle OData with the given serializerProvider and  deserializerProvider. </summary>
      <returns>A list of media type formatters to handle OData.</returns>
      <param name="serializerProvider">The serializer provider to use.</param>
      <param name="deserializerProvider">The deserializer provider to use.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMetadataLevel">
      <summary> The amount of metadata information to serialize in an OData response (for JSON light). </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.Default">
      <summary> Normal metadata; used for anything other than JSON light (Atom/XML, JSON verbose). </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.FullMetadata">
      <summary> JSON light full metadata. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.MinimalMetadata">
      <summary> JSON light minimal metadata. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.NoMetadata">
      <summary> JSON light no metadata. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>Provides a <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> for EDM primitive types.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Retrieves the model binder for the specified type.</summary>
      <returns>The model binder.</returns>
      <param name="configuration">The configuration.</param>
      <param name="modelType">The type of the model to retrieve.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping">
      <summary> Media type mapping that associates requests for the raw value of non-binary primitive properties to the text/plain content type. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary>Determines whether the request is an OData primitive value request.</summary>
      <returns>true if the request is an OData primitive value request; otherwise, false.</returns>
      <param name="propertySegment">The property segment of the path.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping">
      <summary> Media type mapping that associates requests for the raw value of properties. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping" /> class. </summary>
      <param name="mediaType">The media type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary> This method determines if the <see cref="T:System.Net.Http.HttpRequestMessage" /> is an OData Raw value request. </summary>
      <returns>True if the request is an OData raw value request.</returns>
      <param name="propertySegment">The <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> of the path.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary>Returns the quality of the match of the MediaTypeHeaderValue associated with request.</summary>
      <returns>The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match.</returns>
      <param name="request">The request message to check.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider">
      <summary> The default <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns an EDM type deserializer.</summary>
      <returns>An EDM type deserializer.</returns>
      <param name="edmType">The EDM type that the deserializer can handle.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetODataDeserializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.Instance">
      <summary> Gets the default instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />. </summary>
      <returns>The default instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> for reading OData action parameters.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.DeserializerProvider">
      <summary>Gets the deserializer provider to use to read inner objects.</summary>
      <returns>The deserializer provider to use to read inner objects.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Reads the OData action parameters for the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer" />.</summary>
      <returns>The OData that reads the action parameters for the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer" />.</returns>
      <param name="messageReader">The message reader.</param>
      <param name="type">The type of the object.</param>
      <param name="readContext">The read context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData collection payloads. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadCollectionValue(Microsoft.Data.OData.ODataCollectionValue,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="collectionValue" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized collection.</returns>
      <param name="collectionValue">The <see cref="T:Microsoft.Data.OData.ODataCollectionValue" /> to deserialize.</param>
      <param name="elementType">The element type of the collection to read.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData complex type payloads.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadComplexValue(Microsoft.Data.OData.ODataComplexValue,Microsoft.Data.Edm.IEdmComplexTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="complexValue" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized complex value.</returns>
      <param name="complexValue">The complex value to deserialize.</param>
      <param name="complexType">The EDM type of the complex value to read.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer">
      <summary> An <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> is used to read an ODataMessage into a CLR object. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> class. </summary>
      <param name="payloadKind">The kind of payload this deserializer handles.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
      <summary> The kind of ODataPayload this deserializer handles. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Reads an <see cref="T:Microsoft.Data.OData.IODataRequestMessage" /> using messageReader.</summary>
      <returns>The deserialized object.</returns>
      <param name="messageReader">The messageReader to use.</param>
      <param name="type">The type of the object.</param>
      <param name="readContext">The read context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext">
      <summary>This class encapsulates the state and settings that get passed to <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> from the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
      <summary>Gets or sets the EDM model associated with the request.</summary>
      <returns>The EDM model associated with the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
      <summary>Gets or sets the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Request">
      <summary>Gets or sets the HTTP Request that is being deserialized.</summary>
      <returns>The HTTP Request that is being deserialized.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceEdmType">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" /> of the top-level object the request needs to be deserialized into.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceType">
      <summary>Gets or sets the resource type.</summary>
      <returns>The resource type.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider">
      <summary> Represents a factory that creates an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> for the given EDM type. </summary>
      <returns>An <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> that can deserialize the given EDM type.</returns>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.GetODataDeserializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Gets an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> for the given type.</summary>
      <returns>An <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can deserialize the given type.</returns>
      <param name="model">The EDM model.</param>
      <param name="type">The CLR type.</param>
      <param name="request">The request context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer">
      <summary> Base class for all <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />s that deserialize into an object backed by <see cref="T:Microsoft.Data.Edm.IEdmType" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload this deserializer handles.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload this deserializer handles.</param>
      <param name="deserializerProvider">The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.DeserializerProvider">
      <summary> The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> to use for deserializing inner items. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the item into a new object of type corresponding to <see cref="P:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.EdmType" />.</summary>
      <returns>The deserialized object.</returns>
      <param name="item">The item to deserialize.</param>
      <param name="edmType">The type of the object.</param>
      <param name="readContext">The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> for reading OData entry payloads. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider used to read inner objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperties(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the navigation properties from <paramref name="entryWrapper" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the navigation properties should be read.</param>
      <param name="entryWrapper">The entry object containing the navigation properties.</param>
      <param name="entityType">The type of the entity.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperty(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the navigation property from <paramref name="navigationLinkWrapper" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the navigation property should be read.</param>
      <param name="navigationLinkWrapper">The navigation link.</param>
      <param name="entityType">The type of the entity.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperties(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the structural properties from <paramref name="entryWrapper" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the structural properties should be read.</param>
      <param name="entryWrapper">The entry object containing the structural properties.</param>
      <param name="entityType">The type of the entity.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperty(System.Object,Microsoft.Data.OData.ODataProperty,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="structuralProperty" /> into <paramref name="entityResource" />.</summary>
      <param name="entityResource">The object into which the structural property should be read.</param>
      <param name="structuralProperty">The entry object containing the structural properties.</param>
      <param name="entityType">The type of the entity.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.CreateEntityResource(Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Creates a new instance of the backing CLR object for <see cref="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.EntityType" />.</summary>
      <returns>The created CLR object.</returns>
      <param name="entityType">The type of the entity.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Reads an ODataFeed or an ODataItem from the reader under the given context.</summary>
      <returns>The read feed or entry.</returns>
      <param name="messageReader">The OData reader to read from.</param>
      <param name="type">The type of the object.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntry(System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="entryWrapper" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized entity.</returns>
      <param name="entryWrapper">The OData entry to deserialize.</param>
      <param name="entityType">The type of the entity.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntryOrFeed(Microsoft.Data.OData.ODataReader)">
      <summary> Reads an ODataFeed or an ODataItem from the reader. </summary>
      <returns>The read feed or entry.</returns>
      <param name="reader">The OData reader to read from.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="item" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized item.</returns>
      <param name="item">The object to deserialize.</param>
      <param name="edmType">The type of the object.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataEntityReferenceLink" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.#ctor(Microsoft.Data.OData.ODataEntityReferenceLink)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.EntityReferenceLink">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataEntityReferenceLink" />. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData entity reference link payloads.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Reads the OData action parameters for the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer" />.</summary>
      <returns>The Odata that reads the action parameters for the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer" />.</returns>
      <param name="messageReader">The OData message reader.</param>
      <param name="type">The type of the object.</param>
      <param name="readContext">The read context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataEntry" /> and the inner navigation links. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.#ctor(Microsoft.Data.OData.ODataEntry)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.Entry">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataEntry" />. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.NavigationLinks">
      <summary> Gets the inner navigation links. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData feeds. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer" /> class.</summary>
      <param name="deserializerProvider">The deserializer provider used to read inner objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadFeed(System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="feed" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized feed object.</returns>
      <param name="feed">The feed to deserialize.</param>
      <param name="elementType">The type to deserialize.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the given <paramref name="item" /> under the given <paramref name="readContext" />.</summary>
      <returns>The deserialized item.</returns>
      <param name="item">The object to deserialize.</param>
      <param name="edmType">The type of the object.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataFeed" /> and the <see cref="T:Microsoft.Data.OData.ODataEntry" />'s that are part of it. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.#ctor(Microsoft.Data.OData.ODataFeed)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.Entries">
      <summary> Gets the nested entries of this feed. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.Feed">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataFeed" />. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase">
      <summary> Base class for all classes that wrap an <see cref="T:Microsoft.Data.OData.ODataItem" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase.#ctor(Microsoft.Data.OData.ODataItem)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase.Item">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataItem" />. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataNavigationLink" /> and the list of nested items. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.#ctor(Microsoft.Data.OData.ODataNavigationLink)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NavigationLink">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataNavigationLink" />. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NestedItems">
      <summary> Gets the nested items that are part of this navigation link. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData primitve types. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadPrimitive(Microsoft.Data.OData.ODataProperty,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Deserializes the primitive from the given primitiveProperty under the given readContext.</summary>
      <returns>The deserialized OData primitive value.</returns>
      <param name="primitiveProperty">The primitive property to deserialize.</param>
      <param name="readContext">The deserializer context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider">
      <summary> The default <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> for the given <paramref name="edmType" />. </summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />.</returns>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetODataPayloadSerializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for the given <paramref name="model" /> and <paramref name="type" />.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for the given type.</returns>
      <param name="model">The EDM model.</param>
      <param name="type">The <see cref="T:System.Type" /> for which the serializer is being requested.</param>
      <param name="request">The message request.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.Instance">
      <summary> Gets the default instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider" />. </summary>
      <returns>The default instance of the OData serializer provider.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks">
      <summary>EntitySelfLinks contains the Id, Edit and Read links for an entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.#ctor"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.EditLink">
      <summary>A URL that can be used to edit a copy of the resource.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.IdLink">
      <summary>A string that uniquely identifies the resource.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.ReadLink">
      <summary>A URL that can be used to retrieve a copy of the resource.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer">
      <summary>ODataSerializer for serializing collection of Entities or Complex types or primitives.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer" /> class.</summary>
      <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.AddTypeNameAnnotationAsNeeded(Microsoft.Data.OData.ODataCollectionValue,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Adds the type name annotations required for proper json light serialization.</summary>
      <param name="value">The collection value for which the annotations have to be added.</param>
      <param name="metadataLevel">The OData metadata level of the response.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataCollectionValue(System.Collections.IEnumerable,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.Data.OData.ODataCollectionValue" /> for the enumerable represented by <paramref name="enumerable" />.</summary>
      <returns>The created <see cref="T:Microsoft.Data.OData.ODataCollectionValue" />.</returns>
      <param name="enumerable">The value of the collection to be created.</param>
      <param name="elementType">The element EDM type of the collection.</param>
      <param name="writeContext">The serializer context to be used while creating the collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteCollection(Microsoft.Data.OData.ODataCollectionWriter,System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given <paramref name="graph" /> using the given <paramref name="writer" />.</summary>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataCollectionWriter" /> to use.</param>
      <param name="graph">The collection to write.</param>
      <param name="collectionType">The EDM type of the collection.</param>
      <param name="writeContext">The serializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer">
      <summary>ODataSerializer for serializing complex types.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer" /> class.</summary>
      <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataComplexValue(System.Object,Microsoft.Data.Edm.IEdmComplexTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.Data.OData.ODataComplexValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>Returns <see cref="T:Microsoft.Data.OData.ODataComplexValue" />.</returns>
      <param name="graph">The value of the <see cref="T:Microsoft.Data.OData.ODataComplexValue" /> to be created.</param>
      <param name="complexType">The complex type.</param>
      <param name="writeContext">The serializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.Data.OData.ODataValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The <see cref="T:Microsoft.Data.OData.ODataValue" /> created.</returns>
      <param name="graph">The value of the <see cref="T:Microsoft.Data.OData.ODataValue" /> to be created.</param>
      <param name="expectedType">The type to create.</param>
      <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter graph as a whole using the given <paramref name="messageWriter" /> and <paramref name="writeContext" />.</summary>
      <param name="graph">The object to be written.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The <see cref="T:Microsoft.Data.OData.ODataMessageWriter" /> to be used for writing.</param>
      <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> that serializes instances of objects backed by an <see cref="T:Microsoft.Data.Edm.IEdmType" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind,System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> class.</summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
      <param name="serializerProvider">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> to use to write inner objects.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.Data.OData.ODataValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The <see cref="T:Microsoft.Data.OData.ODataValue" /> created.</returns>
      <param name="graph">The value of the <see cref="T:Microsoft.Data.OData.ODataValue" /> to be created.</param>
      <param name="expectedType">The type to create.</param>
      <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.SerializerProvider">
      <summary> Gets the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> that can be used to write inner objects. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter graph as a part of an existing OData message using the given messageWriter and the writeContext.</summary>
      <param name="graph">The object to be written.</param>
      <param name="expectedType">The type to create.</param>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataWriter" /> to be used for writing.</param>
      <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing $links response. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.#ctor">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter <paramref name="graph" /> as a whole using the given <paramref name="messageWriter" /> and <paramref name="writeContext" />.</summary>
      <param name="graph">The object to be written.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The <see cref="T:Microsoft.Data.OData.ODataMessageWriter" /> to be used for writing.</param>
      <param name="writeContext">The serialization context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing link response for a collection navigation property.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes all the object data for the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer" />.</summary>
      <param name="graph">The graph.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The message writer.</param>
      <param name="writeContext">The write context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer">
      <summary>Represents an ODataSerializer for serializing instances of <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /></summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer" /> class.</summary>
      <param name="serializerProvider">The serializer provider.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateEntry(System.Web.Http.OData.Formatter.Serialization.SelectExpandNode,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Creates the <see cref="T:Microsoft.Data.OData.ODataEntry" /> to be written while writing this entity. </summary>
      <returns>The created <see cref="T:Microsoft.Data.OData.ODataEntry" />.</returns>
      <param name="selectExpandNode">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> describing the response graph.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateNavigationLink(Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Creates the <see cref="T:Microsoft.Data.OData.ODataNavigationLink" /> to be written while writing this entity. </summary>
      <returns>The navigation link to be written.</returns>
      <param name="navigationProperty">The navigation property for which the navigation link is being created.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateODataAction(Microsoft.Data.Edm.IEdmFunctionImport,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Creates an <see cref="T:Microsoft.Data.OData.ODataAction" /> to be written for the given action and the entity instance. </summary>
      <returns>The created action or null if the action should not be written.</returns>
      <param name="action">The OData action.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateSelectExpandNode(System.Web.Http.OData.EntityInstanceContext)">
      <summary> Creates the <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> that describes the set of properties and actions to select and expand while writing this entity. </summary>
      <returns> The <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> that describes the set of properties and actions to select and expand while writing this entity. </returns>
      <param name="entityInstanceContext">Contains the entity instance being written and the context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateStructuralProperty(Microsoft.Data.Edm.IEdmStructuralProperty,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Creates the <see cref="T:Microsoft.Data.OData.ODataProperty" /> to be written for the given entity and the structural property. </summary>
      <returns>The <see cref="T:Microsoft.Data.OData.ODataProperty" /> to write.</returns>
      <param name="structuralProperty">The EDM structural property being written.</param>
      <param name="entityInstanceContext">The context for the entity instance being written.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter <paramref name="graph" /> as a whole using the given <paramref name="messageWriter" /> and <paramref name="writeContext" />.</summary>
      <param name="graph">The object to be written.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The <see cref="T:Microsoft.Data.OData.ODataMessageWriter" /> to be used for writing.</param>
      <param name="writeContext">The serialization context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter <paramref name="graph" /> as a part of an existing OData message using the given <paramref name="messageWriter" /> and the <paramref name="writeContext" />.</summary>
      <param name="graph">The object to be written.</param>
      <param name="expectedType">The type to create.</param>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataWriter" /> to be used for writing.</param>
      <param name="writeContext">The serialization context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> to serialize <see cref="T:Microsoft.Data.OData.ODataError" /> and <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer.#ctor">
      <summary>Initializes a new instance of the class <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes all the object data for the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer" />.</summary>
      <param name="graph">The graph.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The message writer.</param>
      <param name="writeContext">The write context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer">
      <summary>Represents an OData serializer for serializing a collection of <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer" />.</summary>
      <param name="serializerProvider">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> used to write nested entries.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.CreateODataFeed(System.Collections.IEnumerable,Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates the <see cref="T:Microsoft.Data.OData.ODataFeed" /> to be written for the given feed instance.</summary>
      <returns>The created <see cref="T:Microsoft.Data.OData.ODataFeed" /> object.</returns>
      <param name="feedInstance">The instance representing the feed being written.</param>
      <param name="feedType">The type of the feed.</param>
      <param name="writeContext">The serializer context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter <paramref name="graph" /> as a whole using the given <paramref name="messageWriter" /> and <paramref name="writeContext" />.</summary>
      <param name="graph">The object to be written.</param>
      <param name="type">The type to create.</param>
      <param name="messageWriter">The <see cref="T:Microsoft.Data.OData.ODataMessageWriter" /> to be used for writing.</param>
      <param name="writeContext">The serialization context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter <paramref name="graph" /> as a part of an existing OData message using the given <paramref name="messageWriter" /> and the <paramref name="writeContext" />.</summary>
      <param name="graph">The object to be written.</param>
      <param name="expectedType">The type to create.</param>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataWriter" /> to be used for writing.</param>
      <param name="writeContext">The serialization context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing metadata.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes all the object data for the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer" />.</summary>
      <param name="graph">The graph.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The message writer.</param>
      <param name="writeContext">The write context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />'s. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataPrimitiveValue(System.Object,Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Creates an <see cref="T:Microsoft.Data.OData.ODataPrimitiveValue" /> for the object represented by <paramref name="graph" />.</summary>
      <returns>The created <see cref="T:Microsoft.Data.OData.ODataPrimitiveValue" />.</returns>
      <param name="graph">The primitive value.</param>
      <param name="primitiveType">The EDM primitive type of the value.</param>
      <param name="writeContext">The serializer write context.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing the raw value of an <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes all the object data for the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer" />.</summary>
      <param name="graph">The graph.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The message writer.</param>
      <param name="writeContext">The write context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer">
      <summary> An ODataSerializer is used to write a CLR object to an ODataMessage. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary> Constructs an ODataSerializer that can generate OData payload of the specified kind. </summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind">
      <summary> Gets the <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind" /> that this serializer generates. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes the given object specified by the parameter graph as a whole using the given messageWriter and writeContext.</summary>
      <param name="graph">The object to be written.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The <see cref="T:Microsoft.Data.OData.ODataMessageWriter" /> to be used for writing.</param>
      <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext">
      <summary>Context information used by the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> when serializing objects in OData message format.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.#ctor(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /> class.</summary>
      <param name="entity">The entity whose navigation property is being expanded.</param>
      <param name="selectExpandClause">The select clause for the navigation property being expanded.</param>
      <param name="navigationProperty">The navigation property being expanded.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.EntitySet">
      <summary>Gets or sets the entity set.</summary>
      <returns>The entity set.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.ExpandedEntity">
      <summary>Gets or sets the entity that is being expanded.</summary>
      <returns>The entity that is being expanded.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Items">
      <summary>Gets a property bag associated with this context to store any generic data.</summary>
      <returns>A property bag associated with this context to store any generic data.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
      <summary>Gets or sets the metadata level of the response.</summary>
      <returns>The metadata level of the response.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Model">
      <summary>Gets or sets the EDM model associated with the request.</summary>
      <returns>The EDM model associated with the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.NavigationProperty">
      <summary>Gets or sets the navigation property being expanded.</summary>
      <returns>The navigation property being expanded.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Path">
      <summary>Gets or sets the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Request">
      <summary>Gets or sets the HTTP Request whose response is being serialized.</summary>
      <returns>The HTTP Request whose response is being serialized.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
      <returns>The request context.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
      <summary>Gets or sets the root element name which is used when writing primitive types and complex types.</summary>
      <returns>The root element name which is used when writing primitive types and complex types.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause">
      <summary>Gets or sets the <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" />.</summary>
      <returns>The <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
      <summary>Get or sets whether expensive links should be calculated.</summary>
      <returns>true if the expensive links should be calculated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Url">
      <summary>Gets or sets the <see cref="T:System.Web.Http.Routing.UrlHelper" /> to use for generating OData links.</summary>
      <returns>The <see cref="T:System.Web.Http.Routing.UrlHelper" /> to use for generating OData links.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider">
      <summary> An ODataSerializerProvider is a factory for creating <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />s. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> for the given edmType. </summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />.</returns>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)">
      <summary>Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for the given model and type.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for the given type.</returns>
      <param name="model">The EDM model associated with the request.</param>
      <param name="type">The <see cref="T:System.Type" /> for which the serializer is being requested.</param>
      <param name="request">The message request.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing <see cref="T:Microsoft.Data.OData.ODataWorkspace" />'s for generating servicedoc's.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
      <summary>Writes all the object data for the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer" />.</summary>
      <param name="graph">The graph.</param>
      <param name="type">The type of the object.</param>
      <param name="messageWriter">The message writer.</param>
      <param name="writeContext">The write context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode">
      <summary> Describes the set of structural properties and navigation properties and actions to select and navigation properties to expand while  writing an <see cref="T:Microsoft.Data.OData.ODataEntry" /> in the response. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.#ctor(Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,Microsoft.Data.Edm.IEdmEntityType,Microsoft.Data.Edm.IEdmModel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> class with the set of structural properties, navigation properties, and actions to select and expand for the given clause.</summary>
      <param name="selectExpandClause">The parsed $select and $expand query options.</param>
      <param name="entityType">The entity type of the entry that would be written.</param>
      <param name="model">The model that contains the given entity type.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.ExpandedNavigationProperties">
      <summary> Gets the list of EDM navigation properties to be expanded in the response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedActions">
      <summary> Gets the list of OData actions to be included in the response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedNavigationProperties">
      <summary> Gets the list of EDM navigation properties to be included as links in the response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedStructuralProperties">
      <summary> Gets the list of EDM structural properties to be included in the response. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary>Arithmetic operators to allow for querying using $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary>A value that corresponds to allowing 'Add' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary>A value that corresponds to allowing all arithmetic operators in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary>A value that corresponds to allowing 'Divide' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary>A value that corresponds to allowing 'Modulo' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary>A value that corresponds to allowing 'Multiply' arithmetic operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary>A value that corresponds to allowing no arithmetic operators in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary>A value that corresponds to allowing 'Subtract' arithmetic operator in $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary>Functions to allow for querying using $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary>A value that corresponds to allowing 'All' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary>A value that corresponds to allowing all datetime related functions in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary>A value that corresponds to allowing all functions in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary>A value that corresponds to allowing math-related functions in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary>A value that corresponds to allowing all string-related functions in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary>A value that corresponds to allowing 'Any' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary>A value that corresponds to allowing 'Cast' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary>A value that corresponds to allowing 'Ceiling' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary>A value that corresponds to allowing 'Concat' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary>A value that corresponds to allowing 'Day' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary>A value that corresponds to allowing 'Days' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary>A value that corresponds to allowing 'EndsWith' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary>A value that corresponds to allowing 'Floor' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary>A value that corresponds to allowing 'Hour' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary>A value that corresponds to allowing 'Hours' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary>A value that corresponds to allowing 'IndexOf' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary>A value that corresponds to allowing 'IsOf' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary>A value that corresponds to allowing 'Length' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary>A value that corresponds to allowing 'Minute' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary>A value that corresponds to allowing 'Minutes' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary>A value that corresponds to allowing 'Month' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary>A value that corresponds to allowing 'Months' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary>A value that corresponds to allowing no functions in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary>A value that corresponds to allowing 'Round' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary>A value that corresponds to allowing 'Second' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary>A value that corresponds to allowing 'Seconds' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary>A value that corresponds to allowing 'StartsWith' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary>A value that corresponds to allowing 'Substring' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary>A value that corresponds to allowing 'SubstringOf' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary>A value that corresponds to allowing 'ToLower' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary>A value that corresponds to allowing 'ToUpper' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary>A value that corresponds to allowing 'Trim' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary>A value that corresponds to allowing 'Year' function in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary>A value that corresponds to allowing 'Years' function in $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary>Logical operators to allow for querying using $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary>A value that corresponds to allowing all logical operators in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary>A value that corresponds to allowing 'And' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary>A value that corresponds to allowing 'Equal' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary>A value that corresponds to allowing 'GreaterThan' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary>A value that corresponds to allowing 'GreaterThanOrEqual' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary>A value that corresponds to allowing 'LessThan' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary>A value that corresponds to allowing 'LessThanOrEqual' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary>A value that corresponds to allowing no logical operators in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary>A value that corresponds to allowing 'Not' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary>A value that corresponds to allowing 'NotEqual' logical operator in $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary>A value that corresponds to allowing 'Or' logical operator in $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary>OData query options to allow for querying.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary>A value that corresponds to allowing all query options.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary>A value that corresponds to allowing the $expand query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary>A value that corresponds to allowing the $filter query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary>A value that corresponds to allowing the $format query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary>A value that corresponds to allowing the $inlinecount query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary>A value that corresponds to allowing no query options.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary>A value that corresponds to allowing the $orderby query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary>A value that corresponds to allowing the $select query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary>A value that corresponds to allowing the $skip query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary>A value that corresponds to allowing the $skiptoken query option.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary>A value that corresponds to the default query options supported by <see cref="T:System.Web.Http.QueryableAttribute" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary>A value that corresponds to allowing the $top query option.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>This defines a $filter OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> based on the raw $filter value and an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">The raw value for $filter query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applies the filter query to the given <see cref="T:System.Linq.IQueryable" />.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the filter query has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application-related settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Applies the filter query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the filter query has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application-related settings.</param>
      <param name="assembliesResolver">The <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> to use.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>Gets the parsed <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" /> for this query option.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>Gets the raw $filter value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validate the filter query based on the given <paramref name="validationSettings" /> . It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Gets or sets the Filter Query Validator</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>This enum defines how to handle null propagation in queriable support.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>Determine how to handle null propagation based on the query provider during query composition. This is the default value used in <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /></summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>Do not handle null propagation during query composition.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>Handle null propagation during query composition.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary>Represents the value of the $inlinecount query option and exposes a way to retrieve the number of entities that satisfy a query.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" /> class.</summary>
      <param name="rawValue">The raw value for the $inlinecount query option.</param>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary>Gets the number of entities that satisfies the given query if the response should include an inline count, or null otherwise.</summary>
      <returns>The number of entities that satisfy the specified query if the response should include an inline count, or null otherwise.</returns>
      <param name="query">The query to compute the count for.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary>Gets the raw $inlinecount value.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary>Gets the value of the $inlinecount in a parsed form.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary>Defines an enumeration for $inlinecount query option values.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary>Corresponds to the 'allpages' $inlinecount query option value.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary>Corresponds to the 'none' $inlinecount query option value.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ITruncatedCollection">
      <summary>Represents a collection that is truncated to a given page size.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ITruncatedCollection.IsTruncated">
      <summary>Gets a value indicating whether the collection is truncated.</summary>
      <returns>true if the collection is truncated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ITruncatedCollection.PageSize">
      <summary>Gets the page size the collection is truncated to.</summary>
      <returns>The page size the collection is truncated to.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>This defines a composite OData query options that can be used to perform query composition. Currently this only supports $filter, $orderby, $top, $skip, and $inlinecount.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> class.</summary>
      <param name="context">The query context.</param>
      <param name="request">The request message.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the individual query to the given <see cref="T:System.Linq.IQueryable" /> in the right order.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the query has been applied to..</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Apply the individual query to the given <see cref="T:System.Linq.IQueryable" /> in the right order.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the query.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The settings to use in query composition.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Object,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applies the query to the given entity using the given <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>The new entity after the $select and $expand query has been applied to.</returns>
      <param name="entity">The original entity.</param>
      <param name="querySettings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>Gets or sets the filter query option.</summary>
      <returns>The filter query option.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>Gets or sets a value that corresponds to allowing the inlinecount query option.</summary>
      <returns>A value that corresponds to allowing the inlinecount query option.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Check if the given query option is an OData system query option.</summary>
      <returns>Returns true if the query option is an OData system query option..</returns>
      <param name="queryOptionName">The name of the query option.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Limits the query results to a maximum number of results.</summary>
      <returns>The limited query results.</returns>
      <param name="queryable">The queryable to limit.</param>
      <param name="limit">The query result limit.</param>
      <param name="resultsLimited">true if the query results were limited; false otherwise.</param>
      <typeparam name="T">The entity CLR type.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Gets or sets a value that corresponds to allowing the orderby query option.</summary>
      <returns>A value that corresponds to allowing the orderby query option.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>Gets the raw string of all the OData query options.</summary>
      <returns>The raw string of all the OData query options.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>Gets the request message associated with this instance.</summary>
      <returns>The request message associated with this instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.SelectExpand">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validate all OData queries, including skip, top, orderby and filter, based on the given <paramref name="validationSettings" />. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>Gets or sets the query validator.</summary>
      <returns>The query validator.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>This defines a composite OData query option that can be used to perform query composition. Currently this only supports $filter, $orderby, $top, $skip.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> class based on the incoming request and some metadata information from the <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information</param>
      <param name="request">The incoming request message</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the individual query to the given IQueryable in the right order.</summary>
      <returns>The query that the query has been applied to.</returns>
      <param name="query">The IQueryable that we are applying query against.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Apply the individual query to the given IQueryable in the right order.</summary>
      <returns>The query that the query has been applied to.</returns>
      <param name="query">The IQueryable that we are applying query against.</param>
      <param name="querySettings">The settings to use in query composition.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>This class describes the settings to use during query composition.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> class and initializes the default settings.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Initialize a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> class based on an existing one.</summary>
      <param name="settings">The setting to copy from.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants would result in better performance with Entity framework.</summary>
      <returns>The default value is true .</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Gets or sets a value indicating whether query composition should alter the original query when necessary to ensure a stable sort order.</summary>
      <returns>A true value indicates the original query should be modified when necessary to guarantee a stable sort order. A false value indicates the sort order can be considered stable without modifying the query. Query providers that ensure a stable sort order should set this value to false . The default value is true .</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Gets or sets a value indicating how null propagation should be handled during query composition.</summary>
      <returns>The default is <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" /> .</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>Gets or sets the maximum number of query results to return.</summary>
      <returns>The maximum number of query results to return, or null if there is no limit.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>Represents the raw query values in the string format from the incoming request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataRawQueryOptions" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Gets the raw $expand query value from the incoming request URI if exists.</summary>
      <returns>The raw $expand query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Gets the raw $filter query value from the incoming request URI if exists.</summary>
      <returns>The raw $filter query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>Gets the raw $format query value from the incoming request URI if exists.</summary>
      <returns>The raw $format query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>Gets the raw $inlineCount query value from the incoming request URI if exists.</summary>
      <returns>The raw $inlineCount query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Gets the raw $orderby query value from the incoming request URI if exists.</summary>
      <returns>The raw $orderby query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>Gets the raw $select query value from the incoming request URI if exists.</summary>
      <returns>The raw $select query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Gets the raw $skip query value from the incoming request URI if exists.</summary>
      <returns>The raw $skip query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Gets the raw $skiptoken query value from the incoming request URI if exists.</summary>
      <returns>The raw $skiptoken query value from the incoming request URI.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>Gets the raw $top query value from the incoming request URI if exists.</summary>
      <returns>The raw $top query value from the incoming request URI.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary>This class describes the validation settings for querying.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary>Gets or sets a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.</summary>
      <returns>A list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>Gets or sets a list of allowed functions used in the $filter query.</summary>
      <returns>A list of allowed functions used in the $filter query.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary>Gets or sets a list of allowed logical operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</summary>
      <returns>A list of allowed logical operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary>Gets a list of properties one can orderby the result with.</summary>
      <returns>A list of properties one can orderby the result with. By default, this list is empty which means it can be ordered by any property.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary>Gets or sets the query parameters that are allowed inside query.</summary>
      <returns>The query parameters that are allowed inside query. The default is all query options, including $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format and $skiptoken.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary>Gets or sets the maximum depth of the Any or All elements nested inside the query.</summary>
      <returns>The maximum depth of the Any or All elements nested inside the query. The default value is 1.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxExpansionDepth">
      <summary>Gets or sets the max expansion depth for the expand query option.</summary>
      <returns>The max expansion depth for the expand query option.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary>Gets or sets the maximum number of the nodes inside the $filter syntax tree.</summary>
      <returns>The maximum number of the nodes inside the $filter syntax tree. The default value is 100. </returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxOrderByNodeCount">
      <summary>Gets or sets the maximum number of expressions that can be present in the $orderby.</summary>
      <returns>The maximum number of expressions that can be present in the $orderby.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
      <summary>Gets or sets the max value of $skip that a client can request.</summary>
      <returns>The max value of $skip that a client can request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
      <summary>Gets or sets the max value of $top that a client can request.</summary>
      <returns>The max value of $top that a client can request.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary>Represents the order by expression '$it' in the $orderby clause.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Instantiates a new instance of <see cref="T:System.Web.Http.OData.Query.OrderByItNode" /> class.</summary>
      <param name="direction">The <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> for this node.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary>Represents a single order by expression in the $orderby clause.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.OrderByNode" /> class.</summary>
      <param name="direction">The direction of the sort order.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary>Creates a list of <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> instances from a linked list of <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" /> instances.</summary>
      <returns>The list of new <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> instances.</returns>
      <param name="orderByClause">The head of the <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" /> linked list.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary>Gets the <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> for the current node.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>Represents an order by <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> expression.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Instantiates a new instance of the <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> class.</summary>
      <param name="property">The <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> for this node.</param>
      <param name="direction">The <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> for this node.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> class.</summary>
      <param name="orderByClause">The orderby clause representing property access.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.OrderByClause">
      <summary>Gets the order by clause for this node.</summary>
      <returns>The order by clause for this node.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>Gets the <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> for the current node.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> for the current node.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>This defines a $orderby OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> based on the raw $orderby value and an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">The raw value for $orderby query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The query that the orderby query has been applied to.</returns>
      <param name="query">The IQueryable that we are applying orderby query against.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the orderby query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The query that the orderby query has been applied to.</returns>
      <param name="query">The IQueryable that we are applying orderby query against.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Apply the $orderby query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the orderby query has been applied to.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>The query context.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByClause">
      <summary>Gets the parsed clause for this query option.</summary>
      <returns>The parsed clause for this query option/</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Gets the mutable list of <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> instances for this query option.</summary>
      <returns>The list of <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> instances for this query option.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>Gets the raw $orderby value.</summary>
      <returns>The raw $orderby value.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validate the orderby query based on the given <paramref name="validationSettings" /> . It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>Gets or sets the OrderBy Query validator.</summary>
      <returns>the OrderBy Query validator.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>An implementation of <see cref="T:System.Web.Http.Filters.IFilterProvider" /> that applies an action filter to any action with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type that doesn't bind a parameter of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" /> class.</summary>
      <param name="queryFilter">The action filter that executes the query.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Provides filters to apply to the specified action.</summary>
      <returns>The filters to apply to the specified action.</returns>
      <param name="configuration">The server configuration.</param>
      <param name="actionDescriptor">The action descriptor for the action to provide filters for.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Gets the action filter that executes the query.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SelectExpandQueryOption">
      <summary>Represents the OData select and expand query options.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.#ctor(System.String,System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" /> class.</summary>
      <param name="select">The select query parameter value.</param>
      <param name="expand">The select query parameter value.</param>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applies the select and expand query options to the given <see cref="T:System.Linq.IQueryable" /> using the given <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the filter query has been applied to.</returns>
      <param name="queryable">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="settings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applies the select and expand query options to the given entity using the given <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>The new entity after the select and expand query has been applied to.</returns>
      <param name="entity">The original entity.</param>
      <param name="settings">The <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> that contains all the query application related settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>The given <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.RawExpand">
      <summary>Gets the raw expand value.</summary>
      <returns>The raw expand value.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.RawSelect">
      <summary>Gets the raw select value.</summary>
      <returns>The raw select value.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause">
      <summary>Gets the parsed <see cref="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause" /> for this query option.</summary>
      <returns>The parsed <see cref="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause" /> for this query option.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validate the select and expand query based on the given validationSettings. It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.Validator">
      <summary>Gets or sets the select and expand query validator.</summary>
      <returns>The select and expand query validator.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>This defines a $skip OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> based on the raw $skip value and an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">The raw value for $skip query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applies the $skip query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the skip query has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applies the $skip query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the skip query has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>Gets the raw $skip value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validate the skip query based on the given <paramref name="validationSettings" /> . It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>Gets or sets the Skip Query Validator.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>Gets the value of the $skip as a parsed integer.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>This defines a $top OData query option for querying.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> based on the raw $top value and an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">The raw value for $top query. It can be null or empty.</param>
      <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext" /> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> and some type information</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Apply the $top query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the top query has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Apply the $top query to the given IQueryable.</summary>
      <returns>The new <see cref="T:System.Linq.IQueryable" /> after the top query has been applied.</returns>
      <param name="query">The original <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">The query settings to use while applying this query option.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>Gets the raw $top value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validate the top query based on the given <paramref name="validationSettings" /> . It throws an ODataException if validation failed.</summary>
      <param name="validationSettings">The <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> instance which contains all the validation settings.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Gets or sets the Top Query Validator.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>Gets the value of the $top as a parsed integer.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.TruncatedCollection`1">
      <summary>Represents a class that truncates a collection to a given page size.</summary>
      <typeparam name="T">The collection element type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.TruncatedCollection`1" /> class.</summary>
      <param name="source">The source.</param>
      <param name="pageSize">The page size.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.TruncatedCollection`1" /> class.</summary>
      <param name="source">The source.</param>
      <param name="pageSize">The page size.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TruncatedCollection`1.IsTruncated">
      <summary>Gets a value indicating whether the collection is truncated.</summary>
      <returns>true if the collection is truncated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TruncatedCollection`1.PageSize">
      <summary>Gets the page size the collection is truncated to.</summary>
      <returns>The page size the collection is truncated to.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary>Provides methods used to validate a <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</summary>
      <param name="filterQueryOption">The $filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'all' query inside the filter query.</summary>
      <param name="allNode">The 'all' query inside the filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'any' query inside the filter query.</summary>
      <param name="anyNode">The 'any' query inside the filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method for the arithmetic operators, including add, sub, mul, div, mod.</summary>
      <param name="binaryNode">The arithmetic operators.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the binary operators inside the filter query. That includes all the logical operators except 'not' and all math operators.</summary>
      <param name="binaryOperatorNode">The binary operators inside the filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate collection property accessor.</summary>
      <param name="propertyAccessNode">The collection property accessor.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'constant' inside the filter query.</summary>
      <param name="constantNode">The 'constant' inside the filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to restrict the 'cast' inside the filter query.</summary>
      <param name="convertNode">The 'cast' inside the filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method if you want to validate casts on entity collections.</summary>
      <param name="entityCollectionCastNode">The casts on entity collections.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate the LogicalOperators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or'. Please note that 'not' is not included here. Please override ValidateUnaryOperatorNode to customize 'not'.</summary>
      <param name="binaryNode">The logical operators.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate for the navigation property node.</summary>
      <param name="sourceNode">The source node.</param>
      <param name="navigationProperty">The navigation property node.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method if you want to visit each query node.</summary>
      <param name="node">The query node to visit.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate the parameter used in the filter query.</summary>
      <param name="rangeVariable">The parameter used in the filter query.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method if you want to validate casts on single entities.</summary>
      <param name="singleEntityCastNode">The casts on single entities.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate Function calls, such as 'length', 'years', etc.</summary>
      <param name="node">The function call node.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate property accessor.</summary>
      <param name="propertyAccessNode">The property accessor.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Override this method to validate the Not operator.</summary>
      <param name="unaryOperatorNode">The unary operator.</param>
      <param name="settings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator">
      <summary>Represents a validator used to validate OData queries based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validates the OData query.</summary>
      <param name="options">The OData query to validate.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator">
      <summary>Represents a validator used to validate an <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validates an <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
      <param name="orderByOption">The $orderby query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator">
      <summary> Represents a validator used to validate a <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" /> based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator.Validate(System.Web.Http.OData.Query.SelectExpandQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Validates a <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />. </summary>
      <param name="selectExpandQueryOption">The $select and $expand query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <param name="skipQueryOption">The $skip query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator">
      <summary>Represents a validator used to validate a <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Validates a <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <param name="topQueryOption">The $top query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Results.CreatedODataResult`1">
      <summary>Represents an action result that is a response to a POST operation with an entity to an entity set.</summary>
      <typeparam name="T">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" /> class.</summary>
      <param name="entity">The created entity.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
      <param name="locationHeader">The location header for the created entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" /> class.</summary>
      <param name="entity">The created entity.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Entity">
      <summary>Gets the entity that was created.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the created entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.LocationHeader">
      <summary>Gets the location header of the created entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Results.UpdatedODataResult`1">
      <summary>Represents an action result that is a response to a PUT, PATCH, or a MERGE operation on an OData entity.</summary>
      <typeparam name="T">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" /> class.</summary>
      <param name="entity">The updated entity.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" /> class.</summary>
      <param name="entity">The updated entity.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Entity">
      <summary>Gets the entity that was updated.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing an action invocation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" /> class.</summary>
      <param name="action">The action being invoked.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" /> class.</summary>
      <param name="actionName">Name of the action.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>Gets the action being invoked.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>Gets the name of the action.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a batch segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.BatchPathSegment" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
      <returns>The segment kind for the current segment.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a cast.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" /> class.</summary>
      <param name="castType">The type of the cast.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" /> class.</summary>
      <param name="castTypeName">Name of the cast type.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>Gets the type of the cast.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>Gets the name of the cast type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary>Parses an OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> and converts an <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> into an OData link.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Converts an instance of <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> into an OData link.</summary>
      <returns>The generated OData link.</returns>
      <param name="path">The OData path to convert into a link.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Parses the specified OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> that contains additional information about the EDM type and entity set for the path.</summary>
      <returns>A parsed representation of the path, or null if the path does not match the model.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="odataPath">The OData path to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Parses the next OData path segment following a collection.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="previous">The previous path segment.</param>
      <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Parses the next OData path segment following a complex-typed segment.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="previous">The previous path segment.</param>
      <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Parses the next OData path segment following an entity.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="previous">The previous path segment.</param>
      <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Parses the next OData path segment following an entity collection.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="previous">The previous path segment.</param>
      <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Parses the next OData path segment following a primitive property.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="previous">The previous path segment.</param>
      <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Parses the first OData segment following the service base URI.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Parses the next OData path segment.</summary>
      <returns>A parsed representation of the segment.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="previous">The previous path segment.</param>
      <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
      <param name="segment">The value of the segment to parse.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary>Parses the OData path into segments.</summary>
      <returns>The segments of the OData path.</returns>
      <param name="odataPath">The OData path.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing an entity set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" /> class.</summary>
      <param name="entitySet">The entity set being accessed.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" /> class.</summary>
      <param name="entitySetName">Name of the entity set.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <summary>Gets the entity set represented by this segment.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Gets the name of the entity set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary>Exposes the ability to parse an OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> and convert an <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> into an OData link.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Converts an instance of <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> into an OData link.</summary>
      <returns>The generated OData link.</returns>
      <param name="path">The OData path to convert into a link.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Parses the specified OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> that contains additional information about the EDM type and entity set for the path.</summary>
      <returns>A parsed representation of the URI, or null if the URI does not match the model.</returns>
      <param name="model">The model to use for path parsing.</param>
      <param name="odataPath">The OData path to parse.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing an indexing into an entity collection by key.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" /> class.</summary>
      <param name="value">The key value to use for indexing into the collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>Gets the key value to use for indexing into the collection.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a links segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.LinksPathSegment" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
      <returns>The segment kind for the current segment.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>Provides an <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a $metadata segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.MetadataPathSegment" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
      <returns>The segment kind for the current segment.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a navigation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" /> class.</summary>
      <param name="navigationProperty">The navigation property being accessed by this segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" /> class.</summary>
      <param name="navigationPropertyName">The name of the navigation property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Gets the navigation property being accessed by this segment.</summary>
      <returns>The navigation property being accessed by this segment.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Gets the name of the navigation property.</summary>
      <returns>The name of the navigation property.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
      <returns>The segment kind for the current segment.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary>An implementation of <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> that uses the server's OData routing conventions to select an action for OData requests.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" /> class.</summary>
      <param name="innerSelector">The inner controller selector to call.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Returns a map, keyed by action string, of all <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> that the selector can select. This is primarily called by <see cref="T:System.Web.Http.Description.IApiExplorer" /> to discover all the possible actions in the controller.</summary>
      <returns>A map of <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> .</returns>
      <param name="controllerDescriptor">The controller descriptor.</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Selects an action for the <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> .</summary>
      <returns>The selected action.</returns>
      <param name="controllerContext">The controller context.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>Provides an object representation for an OData path with additional information about the EDM type and entity set for the path.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> class.</summary>
      <param name="segments">The path segments for the path.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> class.</summary>
      <param name="segments">The path segments for the path.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>Gets or sets the EDM type of the path.</summary>
      <returns>The EDM type of the path.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>Gets or sets the entity set of the path.</summary>
      <returns>The entity set of the path.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>Gets the path template describing the types of segments in the path.</summary>
      <returns>The path template describing the types of segments in the path.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>Gets the path segments for the OData path.</summary>
      <returns>The collection of path segment for the OData path.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString">
      <summary>Returns the string representation of the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> object.</summary>
      <returns>The string representation of the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> object.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary>Implementation of <see cref="T:System.Web.Http.ParameterBindingAttribute" /> used to bind an instance of <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> as an action parameter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets the parameter binding.</summary>
      <returns>The parameter binding.</returns>
      <param name="parameter">The parameter description.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary>An implementation of <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> that only matches OData paths.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" /> class.</summary>
      <param name="pathHandler">The OData path handler to use for parsing.</param>
      <param name="model">The EDM model to use for parsing the path.</param>
      <param name="routeName">The name of the route this constraint is associated with.</param>
      <param name="routingConventions">The OData routing conventions to use for selecting the controller name.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary>Gets the EDM model to use for parsing the path.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>True if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary>Gets the OData path handler to use for parsing.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary>Gets the name of the route this constraint is associated with.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary>Gets the OData routing conventions to use for selecting the controller name.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the name of the controller to dispatch the request to.</summary>
      <returns>The name of the controller to dispatch to, or null if one cannot be resolved.</returns>
      <param name="path">The OData path of the request.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>Provides an object representation for an OData path segment with additional information about the EDM type and entity set for the path.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRoute">
      <summary>A route implementation for OData routes.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.#ctor(System.String,System.Web.Http.OData.Routing.ODataPathRouteConstraint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataRoute" /> class.</summary>
      <param name="routePrefix">The route prefix.</param>
      <param name="pathConstraint">The OData path constraint.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.#ctor(System.String,System.Web.Http.OData.Routing.ODataPathRouteConstraint,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataRoute" /> class.</summary>
      <param name="routePrefix">The route prefix.</param>
      <param name="pathConstraint">The OData path constraint.</param>
      <param name="defaults">The default values for the route.</param>
      <param name="constraints">The route constraints.</param>
      <param name="dataTokens">The data tokens.</param>
      <param name="handler">The message handler for the route.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Compute a URI based on the route and the values provided.</summary>
      <returns>The retrieved <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" />.</returns>
      <param name="request">The request message.</param>
      <param name="values">The values.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataRoute.RoutePrefix">
      <summary>Gets the route prefix.</summary>
      <returns>The route prefix.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants">
      <summary> This class contains route constants for OData. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Batch">
      <summary> Route template suffix for OData batch. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>Provides the values of segment kinds for implementations of <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action">
      <summary>Represents a segment indicating an OData action.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch">
      <summary>Represents the OData $batch segment.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast">
      <summary>Represents a segment indicating a type cast.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet">
      <summary>Represents a segment indicating an entity set.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key">
      <summary>Represents a segment indicating an index by key operation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links">
      <summary>Represents the OData $links segment.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata">
      <summary>Represents the OData $metadata segment.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation">
      <summary>Represents a segment indicating a navigation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property">
      <summary>Represents a segment indicating a property access.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase">
      <summary>Represents the service root segment (for OData service document).</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved">
      <summary>Represents a segment that is not understood.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value">
      <summary>Represents the OData $value segment.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a property access.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> class.</summary>
      <param name="property">The property being accessed by this segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> class.</summary>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Gets the property property being accessed by this segment.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Gets the name of the property.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a segment that could not be resolved.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" /> class.</summary>
      <param name="segmentValue">The unresolved segment value.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Gets the unresolved segment value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>Represents an <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> implementation representing a value segment.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ValuePathSegment" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Gets the EDM type for this segment.</summary>
      <returns>The EDM type for this segment.</returns>
      <param name="previousEdmType">The EDM type of the previous path segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the entity set for this segment.</summary>
      <returns>The entity set for this segment.</returns>
      <param name="previousEntitySet">The entity set of the previous path segment.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Gets the segment kind for the current segment.</summary>
      <returns>The segment kind for the current segment.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles action invocations.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles operating on entities by key.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles entity sets.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the controller for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
      <param name="odataPath">The OData path.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary>Provides an abstraction for selecting a controller and an action for OData requests.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the controller for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
      <param name="odataPath">The OData path.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles link manipulations.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action.</summary>
      <param name="odataPath">The odata path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles OData metadata requests.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Selects the controller for OData requests.</summary>
      <returns>null if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
      <param name="odataPath">The OData path.</param>
      <param name="request">The request.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles navigation properties.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action.</summary>
      <param name="odataPath">The odata path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary>Provides helper methods for creating routing conventions.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary>Creates a mutable list of the default OData routing conventions.</summary>
      <returns>A mutable list of the default OData routing conventions.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention">
      <summary>Provides an implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that handles reading structural properties. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action for OData requests.</summary>
      <returns>null if the request is not handled by this convention; otherwise, the name of the selected action.</returns>
      <param name="odataPath">The OData path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary>An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> that always selects the action named HandleUnmappedRequest if that action is present.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Selects the action.</summary>
      <param name="odataPath">The odata path.</param>
      <param name="controllerContext">The controller context.</param>
      <param name="actionMap">The action map.</param>
    </member>
  </members>
</doc>